{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Icon, Popover, Position, Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { columnInteractionBarContextTypes } from \"../common/context\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT } from \"../common/utils\";\nimport { HeaderCell } from \"./headerCell\";\nexport function HorizontalCellDivider() {\n  return React.createElement(\"div\", {\n    className: Classes.TABLE_HORIZONTAL_CELL_DIVIDER\n  });\n}\n\nvar ColumnHeaderCell = function (_super) {\n  __extends(ColumnHeaderCell, _super);\n\n  function ColumnHeaderCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isActive: false\n    };\n\n    _this.handlePopoverOpened = function () {\n      return _this.setState({\n        isActive: true\n      });\n    };\n\n    _this.handlePopoverClosing = function () {\n      return _this.setState({\n        isActive: false\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * This method determines if a `MouseEvent` was triggered on a target that\n   * should be used as the header click/drag target. This enables users of\n   * this component to render fully interactive components in their header\n   * cells without worry of selection or resize operations from capturing\n   * their mouse events.\n   */\n\n\n  ColumnHeaderCell.isHeaderMouseTarget = function (target) {\n    return target.classList.contains(Classes.TABLE_HEADER) || target.classList.contains(Classes.TABLE_COLUMN_NAME) || target.classList.contains(Classes.TABLE_INTERACTION_BAR) || target.classList.contains(Classes.TABLE_HEADER_CONTENT);\n  };\n\n  ColumnHeaderCell.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        // from IColumnHeaderCellProps\n    enableColumnReordering = _b.enableColumnReordering,\n        isColumnSelected = _b.isColumnSelected,\n        menuIcon = _b.menuIcon,\n        // from IColumnNameProps\n    name = _b.name,\n        nameRenderer = _b.nameRenderer,\n        // from IHeaderProps\n    spreadableProps = __rest(_b, [\"enableColumnReordering\", \"isColumnSelected\", \"menuIcon\", \"name\", \"nameRenderer\"]);\n\n    var classes = classNames(spreadableProps.className, Classes.TABLE_COLUMN_HEADER_CELL, (_a = {}, _a[Classes.TABLE_HAS_INTERACTION_BAR] = this.context.enableColumnInteractionBar, _a[Classes.TABLE_HAS_REORDER_HANDLE] = this.props.reorderHandle != null, _a));\n    return React.createElement(HeaderCell, __assign({\n      isReorderable: this.props.enableColumnReordering,\n      isSelected: this.props.isColumnSelected\n    }, spreadableProps, {\n      className: classes\n    }), this.renderName(), this.maybeRenderContent(), this.props.loading ? undefined : this.props.resizeHandle);\n  };\n\n  ColumnHeaderCell.prototype.renderName = function () {\n    var _a = this.props,\n        index = _a.index,\n        loading = _a.loading,\n        name = _a.name,\n        nameRenderer = _a.nameRenderer,\n        reorderHandle = _a.reorderHandle;\n    var dropdownMenu = this.maybeRenderDropdownMenu();\n    var defaultName = React.createElement(\"div\", {\n      className: Classes.TABLE_TRUNCATED_TEXT\n    }, name);\n    var nameComponent = React.createElement(LoadableContent, {\n      loading: loading,\n      variableLength: true\n    }, nameRenderer == null ? defaultName : nameRenderer(name, index));\n\n    if (this.context.enableColumnInteractionBar) {\n      return React.createElement(\"div\", {\n        className: Classes.TABLE_COLUMN_NAME,\n        title: name\n      }, React.createElement(\"div\", {\n        className: Classes.TABLE_INTERACTION_BAR\n      }, reorderHandle, dropdownMenu), React.createElement(HorizontalCellDivider, null), React.createElement(\"div\", {\n        className: Classes.TABLE_COLUMN_NAME_TEXT\n      }, nameComponent));\n    } else {\n      return React.createElement(\"div\", {\n        className: Classes.TABLE_COLUMN_NAME,\n        title: name\n      }, reorderHandle, dropdownMenu, React.createElement(\"div\", {\n        className: Classes.TABLE_COLUMN_NAME_TEXT\n      }, nameComponent));\n    }\n  };\n\n  ColumnHeaderCell.prototype.maybeRenderContent = function () {\n    if (this.props.children === null) {\n      return undefined;\n    }\n\n    return React.createElement(\"div\", {\n      className: Classes.TABLE_HEADER_CONTENT\n    }, this.props.children);\n  };\n\n  ColumnHeaderCell.prototype.maybeRenderDropdownMenu = function () {\n    var _a;\n\n    var _b = this.props,\n        index = _b.index,\n        menuIcon = _b.menuIcon,\n        menuRenderer = _b.menuRenderer;\n\n    if (!CoreUtils.isFunction(menuRenderer)) {\n      return undefined;\n    }\n\n    var classes = classNames(Classes.TABLE_TH_MENU_CONTAINER, CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT, (_a = {}, _a[Classes.TABLE_TH_MENU_OPEN] = this.state.isActive, _a));\n    return React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(\"div\", {\n      className: Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND\n    }), React.createElement(Popover, {\n      content: menuRenderer(index),\n      position: Position.BOTTOM,\n      className: Classes.TABLE_TH_MENU,\n      modifiers: {\n        preventOverflow: {\n          boundariesElement: \"window\"\n        }\n      },\n      onOpened: this.handlePopoverOpened,\n      onClosing: this.handlePopoverClosing\n    }, React.createElement(Icon, {\n      icon: menuIcon\n    })));\n  };\n\n  ColumnHeaderCell.defaultProps = {\n    isActive: false,\n    menuIcon: \"chevron-down\"\n  };\n  ColumnHeaderCell.contextTypes = columnInteractionBarContextTypes;\n  ColumnHeaderCell = __decorate([polyfill], ColumnHeaderCell);\n  return ColumnHeaderCell;\n}(AbstractPureComponent2);\n\nexport { ColumnHeaderCell };","map":{"version":3,"sources":["../../../src/headers/columnHeaderCell.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SACI,sBADJ,EAEI,IAFJ,EAKI,OALJ,EAMI,QANJ,EAOI,KAAK,IAAI,SAPb,QAQO,mBARP;AAUA,OAAO,KAAK,OAAZ,MAAyB,mBAAzB;AACA,SAAS,gCAAT,QAAoF,mBAApF;AACA,SAAS,eAAT,QAAgC,2BAAhC;AACA,SAAS,wCAAT,QAAyD,iBAAzD;AACA,SAAS,UAAT,QAA6C,cAA7C;AA+CA,OAAM,SAAU,qBAAV,GAA+B;AACjC,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,GAAA,CAAP;AACH;;AAGD,IAAA,gBAAA,GAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,gBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA0BW,IAAA,KAAA,CAAA,KAAA,GAAQ;AACX,MAAA,QAAQ,EAAE;AADC,KAAR;;AA8GC,IAAA,KAAA,CAAA,mBAAA,GAAsB,YAAA;AAAM,aAAA,KAAI,CAAC,QAAL,CAAc;AAAE,QAAA,QAAQ,EAAxB;AAAc,OAAd,CAAA;AAAiC,KAA7D;;AAEA,IAAA,KAAA,CAAA,oBAAA,GAAuB,YAAA;AAAM,aAAA,KAAI,CAAC,QAAL,CAAc;AAAE,QAAA,QAAQ,EAAxB;AAAc,OAAd,CAAA;AAAkC,KAA/D;;;AACX;AAnIG;;;;;;AAMG;;;AACW,EAAA,gBAAA,CAAA,mBAAA,GAAd,UAAkC,MAAlC,EAAqD;AACjD,WACI,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,OAAO,CAAC,YAAlC,KACA,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,OAAO,CAAC,iBAAlC,CADA,IAEA,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,OAAO,CAAC,qBAAlC,CAFA,IAGA,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,OAAO,CAAC,oBAAlC,CAJJ;AAMH,GAPa;;AAeP,EAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACI,QAAM,EAAA,GAYF,KAAK,KAZT;AAAA,QACI;AACA,IAAA,sBAAsB,GAAA,EAAA,CAAA,sBAF1B;AAAA,QAGI,gBAAgB,GAAA,EAAA,CAAA,gBAHpB;AAAA,QAII,QAAQ,GAAA,EAAA,CAAA,QAJZ;AAAA,QAMI;AACA,IAAA,IAAI,GAAA,EAAA,CAAA,IAPR;AAAA,QAQI,YAAY,GAAA,EAAA,CAAA,YARhB;AAAA,QAUI;AACG,IAAA,eAAe,GAAA,MAAA,CAAA,EAAA,EAXhB,CAAA,wBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,cAAA,CAWgB,CAXtB;;AAcA,QAAM,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,SAAjB,EAA4B,OAAO,CAAC,wBAApC,GAA4D,EAAA,GAAA,EAAA,EAClF,EAAA,CAAC,OAAO,CAAC,yBAAT,CAAA,GAAqC,KAAK,OAAL,CAAa,0BADgC,EAElF,EAAA,CAAC,OAAO,CAAC,wBAAT,CAAA,GAAoC,KAAK,KAAL,CAAW,aAAX,IAA4B,IAFkB,EAGpF,EAHwB,EAA1B;AAKA,WACI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA;AACP,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,sBADnB;AAEP,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW;AAFhB,KAAA,EAGH,eAHG,EAGY;AACnB,MAAA,SAAS,EAAE;AADQ,KAHZ,CAAX,EAMK,KAAK,UAAL,EANL,EAOK,KAAK,kBAAL,EAPL,EAQK,KAAK,KAAL,CAAW,OAAX,GAAqB,SAArB,GAAiC,KAAK,KAAL,CAAW,YARjD,CADJ;AAYH,GAhCM;;AAkCC,EAAA,gBAAA,CAAA,SAAA,CAAA,UAAA,GAAR,YAAA;AACU,QAAA,EAAA,GAAwD,KAAK,KAA7D;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,OAAO,GAAA,EAAA,CAAA,OAAhB;AAAA,QAAkB,IAAI,GAAA,EAAA,CAAA,IAAtB;AAAA,QAAwB,YAAY,GAAA,EAAA,CAAA,YAApC;AAAA,QAAsC,aAAa,GAAA,EAAA,CAAA,aAAnD;AAEN,QAAM,YAAY,GAAG,KAAK,uBAAL,EAArB;AACA,QAAM,WAAW,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAA+C,IAA/C,CAApB;AAEA,QAAM,aAAa,GACf,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,MAAA,OAAO,EAAE,OAAV;AAAmB,MAAA,cAAc,EAAE;AAAnC,KAAhB,EACK,YAAY,IAAI,IAAhB,GAAuB,WAAvB,GAAqC,YAAY,CAAC,IAAD,EAAO,KAAP,CADtD,CADJ;;AAMA,QAAI,KAAK,OAAL,CAAa,0BAAjB,EAA6C;AACzC,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC,iBAAxB;AAA2C,QAAA,KAAK,EAAE;AAAlD,OAAA,EACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,OAAA,EACK,aADL,EAEK,YAFL,CADJ,EAKI,KAAA,CAAA,aAAA,CAAC,qBAAD,EAAsB,IAAtB,CALJ,EAMI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,OAAA,EAAiD,aAAjD,CANJ,CADJ;AAUH,KAXD,MAWO;AACH,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC,iBAAxB;AAA2C,QAAA,KAAK,EAAE;AAAlD,OAAA,EACK,aADL,EAEK,YAFL,EAGI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,OAAA,EAAiD,aAAjD,CAHJ,CADJ;AAOH;AACJ,GAhCO;;AAkCA,EAAA,gBAAA,CAAA,SAAA,CAAA,kBAAA,GAAR,YAAA;AACI,QAAI,KAAK,KAAL,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,aAAO,SAAP;AACH;;AAED,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAA+C,KAAK,KAAL,CAAW,QAA1D,CAAP;AACH,GANO;;AAQA,EAAA,gBAAA,CAAA,SAAA,CAAA,uBAAA,GAAR,YAAA;;;AACU,QAAA,EAAA,GAAoC,KAAK,KAAzC;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,QAAQ,GAAA,EAAA,CAAA,QAAjB;AAAA,QAAmB,YAAY,GAAA,EAAA,CAAA,YAA/B;;AAEN,QAAI,CAAC,SAAS,CAAC,UAAV,CAAqB,YAArB,CAAL,EAAyC;AACrC,aAAO,SAAP;AACH;;AAED,QAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,uBAAT,EAAkC,wCAAlC,GAA0E,EAAA,GAAA,EAAA,EAChG,EAAA,CAAC,OAAO,CAAC,kBAAT,CAAA,GAA8B,KAAK,KAAL,CAAW,QADuD,EAElG,EAFwB,EAA1B;AAIA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,CADJ,EAGI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AACJ,MAAA,OAAO,EAAE,YAAY,CAAC,KAAD,CADjB;AAEJ,MAAA,QAAQ,EAAE,QAAQ,CAAC,MAFf;AAGJ,MAAA,SAAS,EAAE,OAAO,CAAC,aAHf;AAIJ,MAAA,SAAS,EAAE;AAAE,QAAA,eAAe,EAAE;AAAE,UAAA,iBAAiB,EAAE;AAArB;AAAnB,OAJP;AAKJ,MAAA,QAAQ,EAAE,KAAK,mBALX;AAMJ,MAAA,SAAS,EAAE,KAAK;AANZ,KAAR,EAQI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,IAAI,EAAE;AAAP,KAAL,CARJ,CAHJ,CADJ;AAiBH,GA5BO;;AAzGM,EAAA,gBAAA,CAAA,YAAA,GAAuC;AACjD,IAAA,QAAQ,EAAE,KADuC;AAEjD,IAAA,QAAQ,EAAE;AAFuC,GAAvC;AAKA,EAAA,gBAAA,CAAA,YAAA,GAAuE,gCAAvE;AANL,EAAA,gBAAgB,GAAA,UAAA,CAAA,CAD5B,QAC4B,CAAA,EAAhB,gBAAgB,CAAhB;AA2Ib,SAAA,gBAAA;AAAC,CA3ID,CAAsC,sBAAtC,CAAA;;SAAa,gB","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Icon, Popover, Position, Utils as CoreUtils, } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { columnInteractionBarContextTypes } from \"../common/context\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT } from \"../common/utils\";\nimport { HeaderCell } from \"./headerCell\";\nexport function HorizontalCellDivider() {\n    return React.createElement(\"div\", { className: Classes.TABLE_HORIZONTAL_CELL_DIVIDER });\n}\nvar ColumnHeaderCell = /** @class */ (function (_super) {\n    __extends(ColumnHeaderCell, _super);\n    function ColumnHeaderCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isActive: false,\n        };\n        _this.handlePopoverOpened = function () { return _this.setState({ isActive: true }); };\n        _this.handlePopoverClosing = function () { return _this.setState({ isActive: false }); };\n        return _this;\n    }\n    /**\n     * This method determines if a `MouseEvent` was triggered on a target that\n     * should be used as the header click/drag target. This enables users of\n     * this component to render fully interactive components in their header\n     * cells without worry of selection or resize operations from capturing\n     * their mouse events.\n     */\n    ColumnHeaderCell.isHeaderMouseTarget = function (target) {\n        return (target.classList.contains(Classes.TABLE_HEADER) ||\n            target.classList.contains(Classes.TABLE_COLUMN_NAME) ||\n            target.classList.contains(Classes.TABLE_INTERACTION_BAR) ||\n            target.classList.contains(Classes.TABLE_HEADER_CONTENT));\n    };\n    ColumnHeaderCell.prototype.render = function () {\n        var _a;\n        var _b = this.props, \n        // from IColumnHeaderCellProps\n        enableColumnReordering = _b.enableColumnReordering, isColumnSelected = _b.isColumnSelected, menuIcon = _b.menuIcon, \n        // from IColumnNameProps\n        name = _b.name, nameRenderer = _b.nameRenderer, \n        // from IHeaderProps\n        spreadableProps = __rest(_b, [\"enableColumnReordering\", \"isColumnSelected\", \"menuIcon\", \"name\", \"nameRenderer\"]);\n        var classes = classNames(spreadableProps.className, Classes.TABLE_COLUMN_HEADER_CELL, (_a = {},\n            _a[Classes.TABLE_HAS_INTERACTION_BAR] = this.context.enableColumnInteractionBar,\n            _a[Classes.TABLE_HAS_REORDER_HANDLE] = this.props.reorderHandle != null,\n            _a));\n        return (React.createElement(HeaderCell, __assign({ isReorderable: this.props.enableColumnReordering, isSelected: this.props.isColumnSelected }, spreadableProps, { className: classes }),\n            this.renderName(),\n            this.maybeRenderContent(),\n            this.props.loading ? undefined : this.props.resizeHandle));\n    };\n    ColumnHeaderCell.prototype.renderName = function () {\n        var _a = this.props, index = _a.index, loading = _a.loading, name = _a.name, nameRenderer = _a.nameRenderer, reorderHandle = _a.reorderHandle;\n        var dropdownMenu = this.maybeRenderDropdownMenu();\n        var defaultName = React.createElement(\"div\", { className: Classes.TABLE_TRUNCATED_TEXT }, name);\n        var nameComponent = (React.createElement(LoadableContent, { loading: loading, variableLength: true }, nameRenderer == null ? defaultName : nameRenderer(name, index)));\n        if (this.context.enableColumnInteractionBar) {\n            return (React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME, title: name },\n                React.createElement(\"div\", { className: Classes.TABLE_INTERACTION_BAR },\n                    reorderHandle,\n                    dropdownMenu),\n                React.createElement(HorizontalCellDivider, null),\n                React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME_TEXT }, nameComponent)));\n        }\n        else {\n            return (React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME, title: name },\n                reorderHandle,\n                dropdownMenu,\n                React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME_TEXT }, nameComponent)));\n        }\n    };\n    ColumnHeaderCell.prototype.maybeRenderContent = function () {\n        if (this.props.children === null) {\n            return undefined;\n        }\n        return React.createElement(\"div\", { className: Classes.TABLE_HEADER_CONTENT }, this.props.children);\n    };\n    ColumnHeaderCell.prototype.maybeRenderDropdownMenu = function () {\n        var _a;\n        var _b = this.props, index = _b.index, menuIcon = _b.menuIcon, menuRenderer = _b.menuRenderer;\n        if (!CoreUtils.isFunction(menuRenderer)) {\n            return undefined;\n        }\n        var classes = classNames(Classes.TABLE_TH_MENU_CONTAINER, CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT, (_a = {},\n            _a[Classes.TABLE_TH_MENU_OPEN] = this.state.isActive,\n            _a));\n        return (React.createElement(\"div\", { className: classes },\n            React.createElement(\"div\", { className: Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND }),\n            React.createElement(Popover, { content: menuRenderer(index), position: Position.BOTTOM, className: Classes.TABLE_TH_MENU, modifiers: { preventOverflow: { boundariesElement: \"window\" } }, onOpened: this.handlePopoverOpened, onClosing: this.handlePopoverClosing },\n                React.createElement(Icon, { icon: menuIcon }))));\n    };\n    ColumnHeaderCell.defaultProps = {\n        isActive: false,\n        menuIcon: \"chevron-down\",\n    };\n    ColumnHeaderCell.contextTypes = columnInteractionBarContextTypes;\n    ColumnHeaderCell = __decorate([\n        polyfill\n    ], ColumnHeaderCell);\n    return ColumnHeaderCell;\n}(AbstractPureComponent2));\nexport { ColumnHeaderCell };\n//# sourceMappingURL=columnHeaderCell.js.map"]},"metadata":{},"sourceType":"module"}