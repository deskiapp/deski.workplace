{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nimport { RegionCardinality } from \"./regions\";\nexport function isSelectionModeEnabled(props, selectionMode, selectionModes) {\n  if (selectionModes === void 0) {\n    selectionModes = props.selectionModes;\n  }\n\n  var children = props.children,\n      numRows = props.numRows;\n  var numColumns = React.Children.count(children);\n  return selectionModes.indexOf(selectionMode) >= 0 && numRows > 0 && numColumns > 0;\n}\nexport function getHotkeysFromProps(props, hotkeysImpl) {\n  var getCellClipboardData = props.getCellClipboardData,\n      enableFocusedCell = props.enableFocusedCell,\n      enableMultipleSelection = props.enableMultipleSelection,\n      selectionModes = props.selectionModes;\n  var hotkeys = [];\n\n  if (getCellClipboardData != null) {\n    hotkeys.push({\n      combo: \"mod+c\",\n      group: \"Table\",\n      label: \"Copy selected table cells\",\n      onKeyDown: hotkeysImpl.handleCopy\n    });\n  }\n\n  var isSomeSelectionModeEnabled = selectionModes.length > 0;\n\n  if (enableMultipleSelection && isSomeSelectionModeEnabled) {\n    hotkeys.push({\n      combo: \"shift+up\",\n      group: \"Table\",\n      label: \"Resize selection upward\",\n      onKeyDown: hotkeysImpl.handleSelectionResizeUp\n    }, {\n      combo: \"shift+down\",\n      group: \"Table\",\n      label: \"Resize selection downward\",\n      onKeyDown: hotkeysImpl.handleSelectionResizeDown\n    }, {\n      combo: \"shift+left\",\n      group: \"Table\",\n      label: \"Resize selection leftward\",\n      onKeyDown: hotkeysImpl.handleSelectionResizeLeft\n    }, {\n      combo: \"shift+right\",\n      group: \"Table\",\n      label: \"Resize selection rightward\",\n      onKeyDown: hotkeysImpl.handleSelectionResizeRight\n    });\n  }\n\n  if (enableFocusedCell != null) {\n    hotkeys.push({\n      combo: \"left\",\n      group: \"Table\",\n      label: \"Move focus cell left\",\n      onKeyDown: hotkeysImpl.handleFocusMoveLeft\n    }, {\n      combo: \"right\",\n      group: \"Table\",\n      label: \"Move focus cell right\",\n      onKeyDown: hotkeysImpl.handleFocusMoveRight\n    }, {\n      combo: \"up\",\n      group: \"Table\",\n      label: \"Move focus cell up\",\n      onKeyDown: hotkeysImpl.handleFocusMoveUp\n    }, {\n      combo: \"down\",\n      group: \"Table\",\n      label: \"Move focus cell down\",\n      onKeyDown: hotkeysImpl.handleFocusMoveDown\n    }, {\n      allowInInput: true,\n      combo: \"tab\",\n      group: \"Table\",\n      label: \"Move focus cell tab\",\n      onKeyDown: hotkeysImpl.handleFocusMoveRightInternal\n    }, {\n      allowInInput: true,\n      combo: \"shift+tab\",\n      group: \"Table\",\n      label: \"Move focus cell shift tab\",\n      onKeyDown: hotkeysImpl.handleFocusMoveLeftInternal\n    }, {\n      allowInInput: true,\n      combo: \"enter\",\n      group: \"Table\",\n      label: \"Move focus cell enter\",\n      onKeyDown: hotkeysImpl.handleFocusMoveDownInternal\n    }, {\n      allowInInput: true,\n      combo: \"shift+enter\",\n      group: \"Table\",\n      label: \"Move focus cell shift enter\",\n      onKeyDown: hotkeysImpl.handleFocusMoveUpInternal\n    });\n  }\n\n  if (isSelectionModeEnabled(props, RegionCardinality.FULL_TABLE)) {\n    hotkeys.push({\n      combo: \"mod+a\",\n      group: \"Table\",\n      label: \"Select all\",\n      onKeyDown: hotkeysImpl.handleSelectAllHotkey\n    });\n  }\n\n  return hotkeys;\n}","map":{"version":3,"sources":["../../src/table2Utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nimport { RegionCardinality } from \"./regions\";\nexport function isSelectionModeEnabled(props, selectionMode, selectionModes) {\n    if (selectionModes === void 0) { selectionModes = props.selectionModes; }\n    var children = props.children, numRows = props.numRows;\n    var numColumns = React.Children.count(children);\n    return selectionModes.indexOf(selectionMode) >= 0 && numRows > 0 && numColumns > 0;\n}\nexport function getHotkeysFromProps(props, hotkeysImpl) {\n    var getCellClipboardData = props.getCellClipboardData, enableFocusedCell = props.enableFocusedCell, enableMultipleSelection = props.enableMultipleSelection, selectionModes = props.selectionModes;\n    var hotkeys = [];\n    if (getCellClipboardData != null) {\n        hotkeys.push({\n            combo: \"mod+c\",\n            group: \"Table\",\n            label: \"Copy selected table cells\",\n            onKeyDown: hotkeysImpl.handleCopy,\n        });\n    }\n    var isSomeSelectionModeEnabled = selectionModes.length > 0;\n    if (enableMultipleSelection && isSomeSelectionModeEnabled) {\n        hotkeys.push({\n            combo: \"shift+up\",\n            group: \"Table\",\n            label: \"Resize selection upward\",\n            onKeyDown: hotkeysImpl.handleSelectionResizeUp,\n        }, {\n            combo: \"shift+down\",\n            group: \"Table\",\n            label: \"Resize selection downward\",\n            onKeyDown: hotkeysImpl.handleSelectionResizeDown,\n        }, {\n            combo: \"shift+left\",\n            group: \"Table\",\n            label: \"Resize selection leftward\",\n            onKeyDown: hotkeysImpl.handleSelectionResizeLeft,\n        }, {\n            combo: \"shift+right\",\n            group: \"Table\",\n            label: \"Resize selection rightward\",\n            onKeyDown: hotkeysImpl.handleSelectionResizeRight,\n        });\n    }\n    if (enableFocusedCell != null) {\n        hotkeys.push({\n            combo: \"left\",\n            group: \"Table\",\n            label: \"Move focus cell left\",\n            onKeyDown: hotkeysImpl.handleFocusMoveLeft,\n        }, {\n            combo: \"right\",\n            group: \"Table\",\n            label: \"Move focus cell right\",\n            onKeyDown: hotkeysImpl.handleFocusMoveRight,\n        }, {\n            combo: \"up\",\n            group: \"Table\",\n            label: \"Move focus cell up\",\n            onKeyDown: hotkeysImpl.handleFocusMoveUp,\n        }, {\n            combo: \"down\",\n            group: \"Table\",\n            label: \"Move focus cell down\",\n            onKeyDown: hotkeysImpl.handleFocusMoveDown,\n        }, {\n            allowInInput: true,\n            combo: \"tab\",\n            group: \"Table\",\n            label: \"Move focus cell tab\",\n            onKeyDown: hotkeysImpl.handleFocusMoveRightInternal,\n        }, {\n            allowInInput: true,\n            combo: \"shift+tab\",\n            group: \"Table\",\n            label: \"Move focus cell shift tab\",\n            onKeyDown: hotkeysImpl.handleFocusMoveLeftInternal,\n        }, {\n            allowInInput: true,\n            combo: \"enter\",\n            group: \"Table\",\n            label: \"Move focus cell enter\",\n            onKeyDown: hotkeysImpl.handleFocusMoveDownInternal,\n        }, {\n            allowInInput: true,\n            combo: \"shift+enter\",\n            group: \"Table\",\n            label: \"Move focus cell shift enter\",\n            onKeyDown: hotkeysImpl.handleFocusMoveUpInternal,\n        });\n    }\n    if (isSelectionModeEnabled(props, RegionCardinality.FULL_TABLE)) {\n        hotkeys.push({\n            combo: \"mod+a\",\n            group: \"Table\",\n            label: \"Select all\",\n            onKeyDown: hotkeysImpl.handleSelectAllHotkey,\n        });\n    }\n    return hotkeys;\n}\n//# sourceMappingURL=table2Utils.js.map"]},"metadata":{},"sourceType":"module"}