{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AbstractPureComponent2, Classes, Keys } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\nimport { Portal } from \"../portal/portal\"; // HACKHACK: https://github.com/palantir/blueprint/issues/4342\n// eslint-disable-next-line deprecation/deprecation\n\nvar Overlay = function (_super) {\n  __extends(Overlay, _super);\n\n  function Overlay() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      hasEverOpened: _this.props.isOpen\n    }; // an HTMLElement that contains the backdrop and any children, to query for focus target\n\n    _this.containerElement = null; // An empty, keyboard-focusable div at the beginning of the Overlay content\n\n    _this.startFocusTrapElement = null; // An empty, keyboard-focusable div at the end of the Overlay content\n\n    _this.endFocusTrapElement = null;\n    _this.refHandlers = {\n      // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n\n      /* eslint-disable-next-line react/no-find-dom-node */\n      container: function (ref) {\n        return _this.containerElement = findDOMNode(ref);\n      },\n      firstFocusable: function (ref) {\n        _this.startFocusTrapElement = ref;\n        ref === null || ref === void 0 ? void 0 : ref.addEventListener(\"focusin\", _this.handleStartFocusTrapElementFocusIn);\n      },\n      lastFocusable: function (ref) {\n        _this.endFocusTrapElement = ref;\n        ref === null || ref === void 0 ? void 0 : ref.addEventListener(\"focusin\", _this.handleEndFocusTrapElementFocusIn);\n      }\n    };\n\n    _this.maybeRenderChild = function (child) {\n      if (isFunction(child)) {\n        child = child();\n      }\n\n      if (child == null) {\n        return null;\n      } // add a special class to each child element that will automatically set the appropriate\n      // CSS position mode under the hood. also, make the container focusable so we can\n      // trap focus inside it (via `enforceFocus`).\n\n\n      var decoratedChild = typeof child === \"object\" ? React.cloneElement(child, {\n        className: classNames(child.props.className, Classes.OVERLAY_CONTENT),\n        tabIndex: _this.props.enforceFocus || _this.props.autoFocus ? 0 : undefined\n      }) : React.createElement(\"span\", {\n        className: Classes.OVERLAY_CONTENT\n      }, child);\n      var _a = _this.props,\n          onOpening = _a.onOpening,\n          onOpened = _a.onOpened,\n          onClosing = _a.onClosing,\n          transitionDuration = _a.transitionDuration,\n          transitionName = _a.transitionName; // a breaking change in react-transition-group types requires us to be explicit about the type overload here,\n      // using a technique similar to Select.ofType() in @blueprintjs/select\n\n      var CSSTransitionImplicit = CSSTransition;\n      return React.createElement(CSSTransitionImplicit, {\n        classNames: transitionName,\n        onEntering: onOpening,\n        onEntered: onOpened,\n        onExiting: onClosing,\n        onExited: _this.handleTransitionExited,\n        timeout: transitionDuration,\n        addEndListener: _this.handleTransitionAddEnd\n      }, decoratedChild);\n    };\n    /**\n     * Ensures repeatedly pressing shift+tab keeps focus inside the Overlay. Moves focus to\n     * the `endFocusTrapElement` or the first keyboard-focusable element in the Overlay (excluding\n     * the `startFocusTrapElement`), depending on whether the element losing focus is inside the\n     * Overlay.\n     */\n\n\n    _this.handleStartFocusTrapElementFocusIn = function (e) {\n      var _a, _b;\n\n      e.preventDefault();\n      e.stopImmediatePropagation();\n\n      if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.endFocusTrapElement) {\n        (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = _this.getKeyboardFocusableElements().shift()) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n    };\n    /**\n     * Ensures repeatedly pressing tab keeps focus inside the Overlay. Moves focus to the\n     * `startFocusTrapElement` or the last keyboard-focusable element in the Overlay (excluding the\n     * `startFocusTrapElement`), depending on whether the element losing focus is inside the\n     * Overlay.\n     */\n\n\n    _this.handleEndFocusTrapElementFocusIn = function (e) {\n      var _a, _b;\n\n      e.preventDefault();\n      e.stopImmediatePropagation();\n\n      if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.startFocusTrapElement) {\n        (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = _this.getKeyboardFocusableElements().pop()) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n    };\n\n    _this.handleTransitionExited = function (node) {\n      var _a, _b;\n\n      if (_this.props.shouldReturnFocusOnClose && _this.lastActiveElementBeforeOpened instanceof HTMLElement) {\n        _this.lastActiveElementBeforeOpened.focus();\n      }\n\n      (_b = (_a = _this.props).onClosed) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    };\n\n    _this.handleBackdropMouseDown = function (e) {\n      var _a;\n\n      var _b = _this.props,\n          backdropProps = _b.backdropProps,\n          canOutsideClickClose = _b.canOutsideClickClose,\n          enforceFocus = _b.enforceFocus,\n          onClose = _b.onClose;\n\n      if (canOutsideClickClose) {\n        onClose === null || onClose === void 0 ? void 0 : onClose(e);\n      }\n\n      if (enforceFocus) {\n        _this.bringFocusInsideOverlay();\n      }\n\n      (_a = backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(backdropProps, e);\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var _a = _this.props,\n          canOutsideClickClose = _a.canOutsideClickClose,\n          enforceFocus = _a.enforceFocus,\n          isOpen = _a.isOpen,\n          onClose = _a.onClose; // get the actual target even if we are in an open mode Shadow DOM\n\n      var eventTarget = e.composed ? e.composedPath()[0] : e.target;\n      var stackIndex = Overlay_1.openStack.indexOf(_this);\n      var isClickInThisOverlayOrDescendant = Overlay_1.openStack.slice(stackIndex).some(function (_a) {\n        var elem = _a.containerElement; // `elem` is the container of backdrop & content, so clicking on that container\n        // should not count as being \"inside\" the overlay.\n\n        return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);\n      });\n\n      if (isOpen && !isClickInThisOverlayOrDescendant) {\n        if (canOutsideClickClose) {\n          // casting to any because this is a native event\n          onClose === null || onClose === void 0 ? void 0 : onClose(e);\n        }\n\n        if (enforceFocus) {\n          _this.bringFocusInsideOverlay();\n        }\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _a = _this.props,\n          canEscapeKeyClose = _a.canEscapeKeyClose,\n          onClose = _a.onClose; // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n\n      /* eslint-disable-next-line deprecation/deprecation */\n\n      if (e.which === Keys.ESCAPE && canEscapeKeyClose) {\n        onClose === null || onClose === void 0 ? void 0 : onClose(e); // prevent browser-specific escape key behavior (Safari exits fullscreen)\n\n        e.preventDefault();\n      }\n    };\n\n    _this.handleTransitionAddEnd = function () {// no-op\n    };\n\n    return _this;\n  }\n\n  Overlay_1 = Overlay;\n\n  Overlay.getDerivedStateFromProps = function (_a) {\n    var hasEverOpened = _a.isOpen;\n\n    if (hasEverOpened) {\n      return {\n        hasEverOpened: hasEverOpened\n      };\n    }\n\n    return null;\n  };\n\n  Overlay.prototype.render = function () {\n    var _a;\n\n    var _b; // oh snap! no reason to render anything at all if we're being truly lazy\n\n\n    if (this.props.lazy && !this.state.hasEverOpened) {\n      return null;\n    }\n\n    var _c = this.props,\n        children = _c.children,\n        className = _c.className,\n        enforceFocus = _c.enforceFocus,\n        usePortal = _c.usePortal,\n        isOpen = _c.isOpen; // TransitionGroup types require single array of children; does not support nested arrays.\n    // So we must collapse backdrop and children into one array, and every item must be wrapped in a\n    // Transition element (no ReactText allowed).\n\n    var childrenWithTransitions = isOpen ? (_b = React.Children.map(children, this.maybeRenderChild)) !== null && _b !== void 0 ? _b : [] : [];\n    var maybeBackdrop = this.maybeRenderBackdrop();\n\n    if (maybeBackdrop !== null) {\n      childrenWithTransitions.unshift(maybeBackdrop);\n    }\n\n    if (isOpen && enforceFocus && childrenWithTransitions.length > 0) {\n      childrenWithTransitions.unshift(this.renderDummyElement(this.refHandlers.firstFocusable, \"__first\"));\n      childrenWithTransitions.push(this.renderDummyElement(this.refHandlers.lastFocusable, \"__last\"));\n    }\n\n    var containerClasses = classNames(Classes.OVERLAY, (_a = {}, _a[Classes.OVERLAY_OPEN] = isOpen, _a[Classes.OVERLAY_INLINE] = !usePortal, _a), className);\n    var transitionGroup = React.createElement(TransitionGroup, {\n      appear: true,\n      \"aria-live\": \"polite\",\n      className: containerClasses,\n      component: \"div\",\n      onKeyDown: this.handleKeyDown,\n      ref: this.refHandlers.container\n    }, childrenWithTransitions);\n\n    if (usePortal) {\n      return React.createElement(Portal, {\n        className: this.props.portalClassName,\n        container: this.props.portalContainer\n      }, transitionGroup);\n    } else {\n      return transitionGroup;\n    }\n  };\n\n  Overlay.prototype.componentDidMount = function () {\n    if (this.props.isOpen) {\n      this.overlayWillOpen();\n    }\n  };\n\n  Overlay.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.isOpen && !this.props.isOpen) {\n      this.overlayWillClose();\n    } else if (!prevProps.isOpen && this.props.isOpen) {\n      this.overlayWillOpen();\n    }\n  };\n\n  Overlay.prototype.componentWillUnmount = function () {\n    this.overlayWillClose();\n  };\n  /**\n   * @public for testing\n   * @internal\n   */\n\n\n  Overlay.prototype.bringFocusInsideOverlay = function () {\n    var _this = this; // always delay focus manipulation to just before repaint to prevent scroll jumping\n\n\n    return this.requestAnimationFrame(function () {\n      var _a; // container ref may be undefined between component mounting and Portal rendering\n      // activeElement may be undefined in some rare cases in IE\n\n\n      if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {\n        return;\n      }\n\n      var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);\n\n      if (isFocusOutsideModal) {\n        // element marked autofocus has higher priority than the other clowns\n        var autofocusElement = _this.containerElement.querySelector(\"[autofocus]\");\n\n        var firstKeyboardFocusableElement = _this.getKeyboardFocusableElements().shift();\n\n        if (autofocusElement != null) {\n          autofocusElement.focus();\n        } else if (firstKeyboardFocusableElement != null) {\n          firstKeyboardFocusableElement.focus();\n        } else {\n          (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    });\n  };\n\n  Overlay.prototype.maybeRenderBackdrop = function () {\n    var _a = this.props,\n        backdropClassName = _a.backdropClassName,\n        backdropProps = _a.backdropProps,\n        hasBackdrop = _a.hasBackdrop,\n        isOpen = _a.isOpen,\n        transitionDuration = _a.transitionDuration,\n        transitionName = _a.transitionName;\n\n    if (hasBackdrop && isOpen) {\n      return React.createElement(CSSTransition, {\n        classNames: transitionName,\n        key: \"__backdrop\",\n        timeout: transitionDuration,\n        addEndListener: this.handleTransitionAddEnd\n      }, React.createElement(\"div\", __assign({}, backdropProps, {\n        className: classNames(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.className),\n        onMouseDown: this.handleBackdropMouseDown\n      })));\n    } else {\n      return null;\n    }\n  };\n\n  Overlay.prototype.renderDummyElement = function (ref, key) {\n    var _a = this.props,\n        transitionDuration = _a.transitionDuration,\n        transitionName = _a.transitionName;\n    return React.createElement(CSSTransition, {\n      classNames: transitionName,\n      key: key,\n      addEndListener: this.handleTransitionAddEnd,\n      timeout: transitionDuration,\n      unmountOnExit: true\n    }, React.createElement(\"div\", {\n      ref: ref,\n      tabIndex: 0\n    }));\n  };\n\n  Overlay.prototype.getKeyboardFocusableElements = function () {\n    var focusableElements = this.containerElement !== null ? Array.from( // Order may not be correct if children elements use tabindex values > 0.\n    // Selectors derived from this SO question:\n    // https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus\n    this.containerElement.querySelectorAll(['a[href]:not([tabindex=\"-1\"])', 'button:not([disabled]):not([tabindex=\"-1\"])', 'details:not([tabindex=\"-1\"])', 'input:not([disabled]):not([tabindex=\"-1\"])', 'select:not([disabled]):not([tabindex=\"-1\"])', 'textarea:not([disabled]):not([tabindex=\"-1\"])', '[tabindex]:not([tabindex=\"-1\"])'].join(\",\"))) : [];\n\n    if (this.props.enforceFocus) {\n      // The first and last elements are dummy elements that help trap focus when enforceFocus\n      // is enabled\n      focusableElements.shift();\n      focusableElements.pop();\n    }\n\n    return focusableElements;\n  };\n\n  Overlay.prototype.overlayWillClose = function () {\n    var _a, _b;\n\n    document.removeEventListener(\"mousedown\", this.handleDocumentClick);\n    (_a = this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"focusin\", this.handleStartFocusTrapElementFocusIn);\n    (_b = this.endFocusTrapElement) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"focusin\", this.handleEndFocusTrapElementFocusIn);\n    var openStack = Overlay_1.openStack;\n    var stackIndex = openStack.indexOf(this);\n\n    if (stackIndex !== -1) {\n      openStack.splice(stackIndex, 1);\n\n      if (openStack.length > 0) {\n        var lastOpenedOverlay = Overlay_1.getLastOpened();\n\n        if (lastOpenedOverlay.props.enforceFocus) {\n          lastOpenedOverlay.bringFocusInsideOverlay();\n        }\n      }\n\n      if (openStack.filter(function (o) {\n        return o.props.usePortal && o.props.hasBackdrop;\n      }).length === 0) {\n        document.body.classList.remove(Classes.OVERLAY_OPEN);\n      }\n    }\n  };\n\n  Overlay.prototype.overlayWillOpen = function () {\n    Overlay_1.openStack.push(this);\n\n    if (this.props.autoFocus) {\n      this.bringFocusInsideOverlay();\n    }\n\n    if (this.props.canOutsideClickClose || this.props.enforceFocus) {\n      document.addEventListener(\"mousedown\", this.handleDocumentClick);\n    }\n\n    if (this.props.hasBackdrop && this.props.usePortal) {\n      // add a class to the body to prevent scrolling of content below the overlay\n      document.body.classList.add(Classes.OVERLAY_OPEN);\n    }\n\n    this.lastActiveElementBeforeOpened = document.activeElement;\n  };\n\n  var Overlay_1;\n  Overlay.displayName = DISPLAYNAME_PREFIX + \".Overlay\";\n  Overlay.defaultProps = {\n    autoFocus: true,\n    backdropProps: {},\n    canEscapeKeyClose: true,\n    canOutsideClickClose: true,\n    enforceFocus: true,\n    hasBackdrop: true,\n    isOpen: false,\n    lazy: true,\n    shouldReturnFocusOnClose: true,\n    transitionDuration: 300,\n    transitionName: Classes.OVERLAY,\n    usePortal: true\n  };\n  Overlay.openStack = [];\n\n  Overlay.getLastOpened = function () {\n    return Overlay_1.openStack[Overlay_1.openStack.length - 1];\n  };\n\n  Overlay = Overlay_1 = __decorate([polyfill], Overlay);\n  return Overlay;\n}(AbstractPureComponent2);\n\nexport { Overlay };","map":{"version":3,"sources":["../../../../src/components/overlay/overlay.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AbstractPureComponent2, Classes, Keys } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\nimport { Portal } from \"../portal/portal\";\n// HACKHACK: https://github.com/palantir/blueprint/issues/4342\n// eslint-disable-next-line deprecation/deprecation\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    function Overlay() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            hasEverOpened: _this.props.isOpen,\n        };\n        // an HTMLElement that contains the backdrop and any children, to query for focus target\n        _this.containerElement = null;\n        // An empty, keyboard-focusable div at the beginning of the Overlay content\n        _this.startFocusTrapElement = null;\n        // An empty, keyboard-focusable div at the end of the Overlay content\n        _this.endFocusTrapElement = null;\n        _this.refHandlers = {\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n            /* eslint-disable-next-line react/no-find-dom-node */\n            container: function (ref) { return (_this.containerElement = findDOMNode(ref)); },\n            firstFocusable: function (ref) {\n                _this.startFocusTrapElement = ref;\n                ref === null || ref === void 0 ? void 0 : ref.addEventListener(\"focusin\", _this.handleStartFocusTrapElementFocusIn);\n            },\n            lastFocusable: function (ref) {\n                _this.endFocusTrapElement = ref;\n                ref === null || ref === void 0 ? void 0 : ref.addEventListener(\"focusin\", _this.handleEndFocusTrapElementFocusIn);\n            },\n        };\n        _this.maybeRenderChild = function (child) {\n            if (isFunction(child)) {\n                child = child();\n            }\n            if (child == null) {\n                return null;\n            }\n            // add a special class to each child element that will automatically set the appropriate\n            // CSS position mode under the hood. also, make the container focusable so we can\n            // trap focus inside it (via `enforceFocus`).\n            var decoratedChild = typeof child === \"object\" ? (React.cloneElement(child, {\n                className: classNames(child.props.className, Classes.OVERLAY_CONTENT),\n                tabIndex: _this.props.enforceFocus || _this.props.autoFocus ? 0 : undefined,\n            })) : (React.createElement(\"span\", { className: Classes.OVERLAY_CONTENT }, child));\n            var _a = _this.props, onOpening = _a.onOpening, onOpened = _a.onOpened, onClosing = _a.onClosing, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\n            // a breaking change in react-transition-group types requires us to be explicit about the type overload here,\n            // using a technique similar to Select.ofType() in @blueprintjs/select\n            var CSSTransitionImplicit = CSSTransition;\n            return (React.createElement(CSSTransitionImplicit, { classNames: transitionName, onEntering: onOpening, onEntered: onOpened, onExiting: onClosing, onExited: _this.handleTransitionExited, timeout: transitionDuration, addEndListener: _this.handleTransitionAddEnd }, decoratedChild));\n        };\n        /**\n         * Ensures repeatedly pressing shift+tab keeps focus inside the Overlay. Moves focus to\n         * the `endFocusTrapElement` or the first keyboard-focusable element in the Overlay (excluding\n         * the `startFocusTrapElement`), depending on whether the element losing focus is inside the\n         * Overlay.\n         */\n        _this.handleStartFocusTrapElementFocusIn = function (e) {\n            var _a, _b;\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (e.relatedTarget != null &&\n                _this.containerElement.contains(e.relatedTarget) &&\n                e.relatedTarget !== _this.endFocusTrapElement) {\n                (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                (_b = _this.getKeyboardFocusableElements().shift()) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        };\n        /**\n         * Ensures repeatedly pressing tab keeps focus inside the Overlay. Moves focus to the\n         * `startFocusTrapElement` or the last keyboard-focusable element in the Overlay (excluding the\n         * `startFocusTrapElement`), depending on whether the element losing focus is inside the\n         * Overlay.\n         */\n        _this.handleEndFocusTrapElementFocusIn = function (e) {\n            var _a, _b;\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (e.relatedTarget != null &&\n                _this.containerElement.contains(e.relatedTarget) &&\n                e.relatedTarget !== _this.startFocusTrapElement) {\n                (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                (_b = _this.getKeyboardFocusableElements().pop()) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        };\n        _this.handleTransitionExited = function (node) {\n            var _a, _b;\n            if (_this.props.shouldReturnFocusOnClose && _this.lastActiveElementBeforeOpened instanceof HTMLElement) {\n                _this.lastActiveElementBeforeOpened.focus();\n            }\n            (_b = (_a = _this.props).onClosed) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        };\n        _this.handleBackdropMouseDown = function (e) {\n            var _a;\n            var _b = _this.props, backdropProps = _b.backdropProps, canOutsideClickClose = _b.canOutsideClickClose, enforceFocus = _b.enforceFocus, onClose = _b.onClose;\n            if (canOutsideClickClose) {\n                onClose === null || onClose === void 0 ? void 0 : onClose(e);\n            }\n            if (enforceFocus) {\n                _this.bringFocusInsideOverlay();\n            }\n            (_a = backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(backdropProps, e);\n        };\n        _this.handleDocumentClick = function (e) {\n            var _a = _this.props, canOutsideClickClose = _a.canOutsideClickClose, enforceFocus = _a.enforceFocus, isOpen = _a.isOpen, onClose = _a.onClose;\n            // get the actual target even if we are in an open mode Shadow DOM\n            var eventTarget = (e.composed ? e.composedPath()[0] : e.target);\n            var stackIndex = Overlay_1.openStack.indexOf(_this);\n            var isClickInThisOverlayOrDescendant = Overlay_1.openStack\n                .slice(stackIndex)\n                .some(function (_a) {\n                var elem = _a.containerElement;\n                // `elem` is the container of backdrop & content, so clicking on that container\n                // should not count as being \"inside\" the overlay.\n                return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);\n            });\n            if (isOpen && !isClickInThisOverlayOrDescendant) {\n                if (canOutsideClickClose) {\n                    // casting to any because this is a native event\n                    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n                }\n                if (enforceFocus) {\n                    _this.bringFocusInsideOverlay();\n                }\n            }\n        };\n        _this.handleKeyDown = function (e) {\n            var _a = _this.props, canEscapeKeyClose = _a.canEscapeKeyClose, onClose = _a.onClose;\n            // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n            /* eslint-disable-next-line deprecation/deprecation */\n            if (e.which === Keys.ESCAPE && canEscapeKeyClose) {\n                onClose === null || onClose === void 0 ? void 0 : onClose(e);\n                // prevent browser-specific escape key behavior (Safari exits fullscreen)\n                e.preventDefault();\n            }\n        };\n        _this.handleTransitionAddEnd = function () {\n            // no-op\n        };\n        return _this;\n    }\n    Overlay_1 = Overlay;\n    Overlay.getDerivedStateFromProps = function (_a) {\n        var hasEverOpened = _a.isOpen;\n        if (hasEverOpened) {\n            return { hasEverOpened: hasEverOpened };\n        }\n        return null;\n    };\n    Overlay.prototype.render = function () {\n        var _a;\n        var _b;\n        // oh snap! no reason to render anything at all if we're being truly lazy\n        if (this.props.lazy && !this.state.hasEverOpened) {\n            return null;\n        }\n        var _c = this.props, children = _c.children, className = _c.className, enforceFocus = _c.enforceFocus, usePortal = _c.usePortal, isOpen = _c.isOpen;\n        // TransitionGroup types require single array of children; does not support nested arrays.\n        // So we must collapse backdrop and children into one array, and every item must be wrapped in a\n        // Transition element (no ReactText allowed).\n        var childrenWithTransitions = isOpen ? (_b = React.Children.map(children, this.maybeRenderChild)) !== null && _b !== void 0 ? _b : [] : [];\n        var maybeBackdrop = this.maybeRenderBackdrop();\n        if (maybeBackdrop !== null) {\n            childrenWithTransitions.unshift(maybeBackdrop);\n        }\n        if (isOpen && enforceFocus && childrenWithTransitions.length > 0) {\n            childrenWithTransitions.unshift(this.renderDummyElement(this.refHandlers.firstFocusable, \"__first\"));\n            childrenWithTransitions.push(this.renderDummyElement(this.refHandlers.lastFocusable, \"__last\"));\n        }\n        var containerClasses = classNames(Classes.OVERLAY, (_a = {},\n            _a[Classes.OVERLAY_OPEN] = isOpen,\n            _a[Classes.OVERLAY_INLINE] = !usePortal,\n            _a), className);\n        var transitionGroup = (React.createElement(TransitionGroup, { appear: true, \"aria-live\": \"polite\", className: containerClasses, component: \"div\", onKeyDown: this.handleKeyDown, ref: this.refHandlers.container }, childrenWithTransitions));\n        if (usePortal) {\n            return (React.createElement(Portal, { className: this.props.portalClassName, container: this.props.portalContainer }, transitionGroup));\n        }\n        else {\n            return transitionGroup;\n        }\n    };\n    Overlay.prototype.componentDidMount = function () {\n        if (this.props.isOpen) {\n            this.overlayWillOpen();\n        }\n    };\n    Overlay.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.isOpen && !this.props.isOpen) {\n            this.overlayWillClose();\n        }\n        else if (!prevProps.isOpen && this.props.isOpen) {\n            this.overlayWillOpen();\n        }\n    };\n    Overlay.prototype.componentWillUnmount = function () {\n        this.overlayWillClose();\n    };\n    /**\n     * @public for testing\n     * @internal\n     */\n    Overlay.prototype.bringFocusInsideOverlay = function () {\n        var _this = this;\n        // always delay focus manipulation to just before repaint to prevent scroll jumping\n        return this.requestAnimationFrame(function () {\n            var _a;\n            // container ref may be undefined between component mounting and Portal rendering\n            // activeElement may be undefined in some rare cases in IE\n            if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {\n                return;\n            }\n            var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);\n            if (isFocusOutsideModal) {\n                // element marked autofocus has higher priority than the other clowns\n                var autofocusElement = _this.containerElement.querySelector(\"[autofocus]\");\n                var firstKeyboardFocusableElement = _this.getKeyboardFocusableElements().shift();\n                if (autofocusElement != null) {\n                    autofocusElement.focus();\n                }\n                else if (firstKeyboardFocusableElement != null) {\n                    firstKeyboardFocusableElement.focus();\n                }\n                else {\n                    (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }\n        });\n    };\n    Overlay.prototype.maybeRenderBackdrop = function () {\n        var _a = this.props, backdropClassName = _a.backdropClassName, backdropProps = _a.backdropProps, hasBackdrop = _a.hasBackdrop, isOpen = _a.isOpen, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\n        if (hasBackdrop && isOpen) {\n            return (React.createElement(CSSTransition, { classNames: transitionName, key: \"__backdrop\", timeout: transitionDuration, addEndListener: this.handleTransitionAddEnd },\n                React.createElement(\"div\", __assign({}, backdropProps, { className: classNames(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.className), onMouseDown: this.handleBackdropMouseDown }))));\n        }\n        else {\n            return null;\n        }\n    };\n    Overlay.prototype.renderDummyElement = function (ref, key) {\n        var _a = this.props, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\n        return (React.createElement(CSSTransition, { classNames: transitionName, key: key, addEndListener: this.handleTransitionAddEnd, timeout: transitionDuration, unmountOnExit: true },\n            React.createElement(\"div\", { ref: ref, tabIndex: 0 })));\n    };\n    Overlay.prototype.getKeyboardFocusableElements = function () {\n        var focusableElements = this.containerElement !== null\n            ? Array.from(\n            // Order may not be correct if children elements use tabindex values > 0.\n            // Selectors derived from this SO question:\n            // https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus\n            this.containerElement.querySelectorAll([\n                'a[href]:not([tabindex=\"-1\"])',\n                'button:not([disabled]):not([tabindex=\"-1\"])',\n                'details:not([tabindex=\"-1\"])',\n                'input:not([disabled]):not([tabindex=\"-1\"])',\n                'select:not([disabled]):not([tabindex=\"-1\"])',\n                'textarea:not([disabled]):not([tabindex=\"-1\"])',\n                '[tabindex]:not([tabindex=\"-1\"])',\n            ].join(\",\")))\n            : [];\n        if (this.props.enforceFocus) {\n            // The first and last elements are dummy elements that help trap focus when enforceFocus\n            // is enabled\n            focusableElements.shift();\n            focusableElements.pop();\n        }\n        return focusableElements;\n    };\n    Overlay.prototype.overlayWillClose = function () {\n        var _a, _b;\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\n        (_a = this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"focusin\", this.handleStartFocusTrapElementFocusIn);\n        (_b = this.endFocusTrapElement) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"focusin\", this.handleEndFocusTrapElementFocusIn);\n        var openStack = Overlay_1.openStack;\n        var stackIndex = openStack.indexOf(this);\n        if (stackIndex !== -1) {\n            openStack.splice(stackIndex, 1);\n            if (openStack.length > 0) {\n                var lastOpenedOverlay = Overlay_1.getLastOpened();\n                if (lastOpenedOverlay.props.enforceFocus) {\n                    lastOpenedOverlay.bringFocusInsideOverlay();\n                }\n            }\n            if (openStack.filter(function (o) { return o.props.usePortal && o.props.hasBackdrop; }).length === 0) {\n                document.body.classList.remove(Classes.OVERLAY_OPEN);\n            }\n        }\n    };\n    Overlay.prototype.overlayWillOpen = function () {\n        Overlay_1.openStack.push(this);\n        if (this.props.autoFocus) {\n            this.bringFocusInsideOverlay();\n        }\n        if (this.props.canOutsideClickClose || this.props.enforceFocus) {\n            document.addEventListener(\"mousedown\", this.handleDocumentClick);\n        }\n        if (this.props.hasBackdrop && this.props.usePortal) {\n            // add a class to the body to prevent scrolling of content below the overlay\n            document.body.classList.add(Classes.OVERLAY_OPEN);\n        }\n        this.lastActiveElementBeforeOpened = document.activeElement;\n    };\n    var Overlay_1;\n    Overlay.displayName = DISPLAYNAME_PREFIX + \".Overlay\";\n    Overlay.defaultProps = {\n        autoFocus: true,\n        backdropProps: {},\n        canEscapeKeyClose: true,\n        canOutsideClickClose: true,\n        enforceFocus: true,\n        hasBackdrop: true,\n        isOpen: false,\n        lazy: true,\n        shouldReturnFocusOnClose: true,\n        transitionDuration: 300,\n        transitionName: Classes.OVERLAY,\n        usePortal: true,\n    };\n    Overlay.openStack = [];\n    Overlay.getLastOpened = function () { return Overlay_1.openStack[Overlay_1.openStack.length - 1]; };\n    Overlay = Overlay_1 = __decorate([\n        polyfill\n    ], Overlay);\n    return Overlay;\n}(AbstractPureComponent2));\nexport { Overlay };\n//# sourceMappingURL=overlay.js.map"]},"metadata":{},"sourceType":"module"}