{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"../../common/classes\";\nimport { TruncatedFormat, TruncatedPopoverMode } from \"./truncatedFormat\";\n/* istanbul ignore next */\n\nvar JSONFormat = function (_super) {\n  __extends(JSONFormat, _super);\n\n  function JSONFormat() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  JSONFormat.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        children = _b.children,\n        omitQuotesOnStrings = _b.omitQuotesOnStrings,\n        stringify = _b.stringify;\n    var showPopover = this.props.showPopover; // always hide popover if value is nully\n\n    var isNully = children == null;\n\n    if (isNully) {\n      showPopover = TruncatedPopoverMode.NEVER;\n    }\n\n    var className = classNames(this.props.className, (_a = {}, _a[Classes.TABLE_NULL] = isNully, _a));\n    var displayValue = \"\";\n\n    if (omitQuotesOnStrings && typeof children === \"string\") {\n      displayValue = children;\n    } else {\n      displayValue = stringify(children);\n    }\n\n    return React.createElement(TruncatedFormat, __assign({}, this.props, {\n      className: className,\n      showPopover: showPopover\n    }), displayValue);\n  };\n\n  JSONFormat.displayName = DISPLAYNAME_PREFIX + \".JSONFormat\";\n  JSONFormat.defaultProps = {\n    omitQuotesOnStrings: true,\n    stringify: function (obj) {\n      return JSON.stringify(obj, null, 2);\n    }\n  };\n  return JSONFormat;\n}(React.Component);\n\nexport { JSONFormat };","map":{"version":3,"sources":["../../../../src/cell/formats/jsonFormat.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,KAAK,OAAZ,MAAyB,sBAAzB;AACA,SAAgC,eAAhC,EAAiD,oBAAjD,QAA6E,mBAA7E;AAsBA;;AACA,IAAA,UAAA,GAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,UAAA,GAAA;;AAkCC;;AA1BU,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACU,QAAA,EAAA,GAA+C,KAAK,KAApD;AAAA,QAAE,QAAQ,GAAA,EAAA,CAAA,QAAV;AAAA,QAAY,mBAAmB,GAAA,EAAA,CAAA,mBAA/B;AAAA,QAAiC,SAAS,GAAA,EAAA,CAAA,SAA1C;AACA,QAAA,WAAW,GAAK,KAAK,KAAL,CAAL,WAAX,CAFV,CAII;;AACA,QAAM,OAAO,GAAG,QAAQ,IAAI,IAA5B;;AACA,QAAI,OAAJ,EAAa;AACT,MAAA,WAAW,GAAG,oBAAoB,CAAC,KAAnC;AACH;;AACD,QAAM,SAAS,GAAG,UAAU,CAAC,KAAK,KAAL,CAAW,SAAZ,GAAqB,EAAA,GAAA,EAAA,EAC7C,EAAA,CAAC,OAAO,CAAC,UAAT,CAAA,GAAsB,OADuB,EAE/C,EAF0B,EAA5B;AAIA,QAAI,YAAY,GAAG,EAAnB;;AACA,QAAI,mBAAmB,IAAI,OAAO,QAAP,KAAoB,QAA/C,EAAyD;AACrD,MAAA,YAAY,GAAG,QAAf;AACH,KAFD,MAEO;AACH,MAAA,YAAY,GAAG,SAAS,CAAC,QAAD,CAAxB;AACH;;AAED,WACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EAAK,KAAK,KAAV,EAAe;AAAE,MAAA,SAAS,EAAE,SAAb;AAAwB,MAAA,WAAW,EAAE;AAArC,KAAf,CAAhB,EACK,YADL,CADJ;AAKH,GAzBM;;AAPO,EAAA,UAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,aAAnC;AAEA,EAAA,UAAA,CAAA,YAAA,GAAiC;AAC3C,IAAA,mBAAmB,EAAE,IADsB;AAE3C,IAAA,SAAS,EAAE,UAAC,GAAD,EAAS;AAAK,aAAA,IAAI,CAAC,SAAL,CAAe,GAAf,EAAoB,IAApB,EAAA,CAAA,CAAA;AAA4B;AAFV,GAAjC;AA+BlB,SAAA,UAAA;AAAC,CAlCD,CAAgC,KAAK,CAAC,SAAtC,CAAA;;SAAa,U","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"../../common/classes\";\nimport { TruncatedFormat, TruncatedPopoverMode } from \"./truncatedFormat\";\n/* istanbul ignore next */\nvar JSONFormat = /** @class */ (function (_super) {\n    __extends(JSONFormat, _super);\n    function JSONFormat() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    JSONFormat.prototype.render = function () {\n        var _a;\n        var _b = this.props, children = _b.children, omitQuotesOnStrings = _b.omitQuotesOnStrings, stringify = _b.stringify;\n        var showPopover = this.props.showPopover;\n        // always hide popover if value is nully\n        var isNully = children == null;\n        if (isNully) {\n            showPopover = TruncatedPopoverMode.NEVER;\n        }\n        var className = classNames(this.props.className, (_a = {},\n            _a[Classes.TABLE_NULL] = isNully,\n            _a));\n        var displayValue = \"\";\n        if (omitQuotesOnStrings && typeof children === \"string\") {\n            displayValue = children;\n        }\n        else {\n            displayValue = stringify(children);\n        }\n        return (React.createElement(TruncatedFormat, __assign({}, this.props, { className: className, showPopover: showPopover }), displayValue));\n    };\n    JSONFormat.displayName = DISPLAYNAME_PREFIX + \".JSONFormat\";\n    JSONFormat.defaultProps = {\n        omitQuotesOnStrings: true,\n        stringify: function (obj) { return JSON.stringify(obj, null, 2); },\n    };\n    return JSONFormat;\n}(React.Component));\nexport { JSONFormat };\n//# sourceMappingURL=jsonFormat.js.map"]},"metadata":{},"sourceType":"module"}