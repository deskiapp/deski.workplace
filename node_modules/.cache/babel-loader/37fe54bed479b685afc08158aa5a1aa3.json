{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as Classes from \"../common/classes\";\n/**\n * Efficiently detect when an HTMLElement is resized.\n *\n * Attaches an invisible \"resize-sensor\" div to the element. Then it checks\n * the element's offsetWidth and offsetHeight whenever a scroll event is\n * triggered on the \"resize-sensor\" children. These events are further\n * debounced using requestAnimationFrame.\n *\n * Inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\n\nvar ResizeSensor = function () {\n  function ResizeSensor() {}\n\n  ResizeSensor.attach = function (element, callback) {\n    var lifecycle = ResizeSensor.debounce(callback);\n    var resizeSensor = document.createElement(\"div\");\n    resizeSensor.className = Classes.TABLE_RESIZE_SENSOR;\n    resizeSensor.style.cssText = ResizeSensor.RESIZE_SENSOR_STYLE;\n    resizeSensor.innerHTML = ResizeSensor.RESIZE_SENSOR_HTML;\n    element.appendChild(resizeSensor);\n\n    if (getComputedStyle(element, null).getPropertyValue(\"position\") === \"static\") {\n      element.style.position = \"relative\";\n    }\n\n    var expand = resizeSensor.childNodes[0];\n    var expandChild = expand.childNodes[0];\n    var shrink = resizeSensor.childNodes[1];\n\n    var reset = function () {\n      expandChild.style.width = \"100000px\";\n      expandChild.style.height = \"100000px\";\n      expand.scrollLeft = 100000;\n      expand.scrollTop = 100000;\n      shrink.scrollLeft = 100000;\n      shrink.scrollTop = 100000;\n    };\n\n    reset();\n    var lastWidth;\n    var lastHeight;\n\n    var onScroll = function () {\n      if (element == null) {\n        return;\n      }\n\n      var currentWidth = element.offsetWidth;\n      var currentHeight = element.offsetHeight;\n\n      if (currentWidth !== lastWidth || currentHeight !== lastHeight) {\n        lastWidth = currentWidth;\n        lastHeight = currentHeight;\n        lifecycle.trigger();\n      }\n\n      reset();\n    };\n\n    expand.addEventListener(\"scroll\", onScroll);\n    shrink.addEventListener(\"scroll\", onScroll);\n    return function () {\n      element.removeChild(resizeSensor);\n      lifecycle.cancelled = true;\n    };\n  };\n\n  ResizeSensor.debounce = function (callback) {\n    var scope = {\n      cancelled: false,\n      trigger: function () {\n        if (scope.triggered || scope.cancelled) {\n          return;\n        }\n\n        scope.triggered = true;\n        requestAnimationFrame(function () {\n          scope.triggered = false;\n\n          if (!scope.cancelled) {\n            callback();\n          }\n        });\n      },\n      triggered: false\n    };\n    return scope;\n  };\n\n  ResizeSensor.RESIZE_SENSOR_STYLE = \"position: absolute; left: 0; top: 0; right: 0; \" + \"bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n  ResizeSensor.RESIZE_SENSOR_HTML = \"<div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_EXPAND + \"\\\"\\n        style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s;\\\"\\n        ></div></div><div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_SHRINK + \"\\\" style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"\\n        ><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;\\\"></div></div>\";\n  return ResizeSensor;\n}();\n\nexport { ResizeSensor };","map":{"version":3,"sources":["../../../src/interactions/resizeSensor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as Classes from \"../common/classes\";\n/**\n * Efficiently detect when an HTMLElement is resized.\n *\n * Attaches an invisible \"resize-sensor\" div to the element. Then it checks\n * the element's offsetWidth and offsetHeight whenever a scroll event is\n * triggered on the \"resize-sensor\" children. These events are further\n * debounced using requestAnimationFrame.\n *\n * Inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\nvar ResizeSensor = /** @class */ (function () {\n    function ResizeSensor() {\n    }\n    ResizeSensor.attach = function (element, callback) {\n        var lifecycle = ResizeSensor.debounce(callback);\n        var resizeSensor = document.createElement(\"div\");\n        resizeSensor.className = Classes.TABLE_RESIZE_SENSOR;\n        resizeSensor.style.cssText = ResizeSensor.RESIZE_SENSOR_STYLE;\n        resizeSensor.innerHTML = ResizeSensor.RESIZE_SENSOR_HTML;\n        element.appendChild(resizeSensor);\n        if (getComputedStyle(element, null).getPropertyValue(\"position\") === \"static\") {\n            element.style.position = \"relative\";\n        }\n        var expand = resizeSensor.childNodes[0];\n        var expandChild = expand.childNodes[0];\n        var shrink = resizeSensor.childNodes[1];\n        var reset = function () {\n            expandChild.style.width = \"100000px\";\n            expandChild.style.height = \"100000px\";\n            expand.scrollLeft = 100000;\n            expand.scrollTop = 100000;\n            shrink.scrollLeft = 100000;\n            shrink.scrollTop = 100000;\n        };\n        reset();\n        var lastWidth;\n        var lastHeight;\n        var onScroll = function () {\n            if (element == null) {\n                return;\n            }\n            var currentWidth = element.offsetWidth;\n            var currentHeight = element.offsetHeight;\n            if (currentWidth !== lastWidth || currentHeight !== lastHeight) {\n                lastWidth = currentWidth;\n                lastHeight = currentHeight;\n                lifecycle.trigger();\n            }\n            reset();\n        };\n        expand.addEventListener(\"scroll\", onScroll);\n        shrink.addEventListener(\"scroll\", onScroll);\n        return function () {\n            element.removeChild(resizeSensor);\n            lifecycle.cancelled = true;\n        };\n    };\n    ResizeSensor.debounce = function (callback) {\n        var scope = {\n            cancelled: false,\n            trigger: function () {\n                if (scope.triggered || scope.cancelled) {\n                    return;\n                }\n                scope.triggered = true;\n                requestAnimationFrame(function () {\n                    scope.triggered = false;\n                    if (!scope.cancelled) {\n                        callback();\n                    }\n                });\n            },\n            triggered: false,\n        };\n        return scope;\n    };\n    ResizeSensor.RESIZE_SENSOR_STYLE = \"position: absolute; left: 0; top: 0; right: 0; \" +\n        \"bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n    ResizeSensor.RESIZE_SENSOR_HTML = \"<div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_EXPAND + \"\\\"\\n        style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s;\\\"\\n        ></div></div><div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_SHRINK + \"\\\" style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"\\n        ><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;\\\"></div></div>\";\n    return ResizeSensor;\n}());\nexport { ResizeSensor };\n//# sourceMappingURL=resizeSensor.js.map"]},"metadata":{},"sourceType":"module"}