{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractComponent2 } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport * as Errors from \"../common/errors\";\nexport var QuadrantType;\n\n(function (QuadrantType) {\n  /**\n   * The main quadrant beneath any frozen rows or columns.\n   */\n  QuadrantType[\"MAIN\"] = \"main\";\n  /**\n   * The top quadrant, containing column headers and frozen rows.\n   */\n\n  QuadrantType[\"TOP\"] = \"top\";\n  /**\n   * The left quadrant, containing row headers and frozen columns.\n   */\n\n  QuadrantType[\"LEFT\"] = \"left\";\n  /**\n   * The top-left quadrant, containing the headers and cells common to both\n   * the frozen columns and frozen rows.\n   */\n\n  QuadrantType[\"TOP_LEFT\"] = \"top-left\";\n})(QuadrantType || (QuadrantType = {}));\n\nvar TableQuadrant = function (_super) {\n  __extends(TableQuadrant, _super);\n\n  function TableQuadrant() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableQuadrant.prototype.render = function () {\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g = this.props,\n        grid = _g.grid,\n        enableRowHeader = _g.enableRowHeader,\n        quadrantType = _g.quadrantType,\n        bodyRenderer = _g.bodyRenderer;\n    var showFrozenRowsOnly = quadrantType === QuadrantType.TOP || quadrantType === QuadrantType.TOP_LEFT;\n    var showFrozenColumnsOnly = quadrantType === QuadrantType.LEFT || quadrantType === QuadrantType.TOP_LEFT;\n    var className = classNames(Classes.TABLE_QUADRANT, this.getQuadrantCssClass(), this.props.className);\n    var maybeMenu = enableRowHeader && ((_b = (_a = this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a));\n    var maybeRowHeader = enableRowHeader && ((_d = (_c = this.props).rowHeaderCellRenderer) === null || _d === void 0 ? void 0 : _d.call(_c, showFrozenRowsOnly));\n    var maybeColumnHeader = (_f = (_e = this.props).columnHeaderCellRenderer) === null || _f === void 0 ? void 0 : _f.call(_e, showFrozenColumnsOnly);\n    var body = quadrantType != null ? bodyRenderer(quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly) : bodyRenderer(); // need to set bottom container size to prevent overlay clipping on scroll\n\n    var bottomContainerStyle = {\n      height: grid.getHeight(),\n      width: grid.getWidth()\n    };\n    return React.createElement(\"div\", {\n      className: className,\n      style: this.props.style,\n      ref: this.props.quadrantRef\n    }, React.createElement(\"div\", {\n      className: Classes.TABLE_QUADRANT_SCROLL_CONTAINER,\n      ref: this.props.scrollContainerRef,\n      onScroll: this.props.onScroll,\n      onWheel: this.props.onWheel\n    }, React.createElement(\"div\", {\n      className: Classes.TABLE_TOP_CONTAINER\n    }, maybeMenu, maybeColumnHeader), React.createElement(\"div\", {\n      className: Classes.TABLE_BOTTOM_CONTAINER,\n      style: bottomContainerStyle\n    }, maybeRowHeader, React.createElement(\"div\", {\n      className: Classes.TABLE_QUADRANT_BODY_CONTAINER,\n      ref: this.props.bodyRef\n    }, body))));\n  };\n\n  TableQuadrant.prototype.validateProps = function (nextProps) {\n    var quadrantType = nextProps.quadrantType;\n\n    if (nextProps.onScroll != null && quadrantType != null && quadrantType !== QuadrantType.MAIN) {\n      console.warn(Errors.QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED);\n    }\n  };\n\n  TableQuadrant.prototype.getQuadrantCssClass = function () {\n    switch (this.props.quadrantType) {\n      case QuadrantType.MAIN:\n        return Classes.TABLE_QUADRANT_MAIN;\n\n      case QuadrantType.TOP:\n        return Classes.TABLE_QUADRANT_TOP;\n\n      case QuadrantType.LEFT:\n        return Classes.TABLE_QUADRANT_LEFT;\n\n      case QuadrantType.TOP_LEFT:\n        return Classes.TABLE_QUADRANT_TOP_LEFT;\n\n      default:\n        return undefined;\n    }\n  }; // we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid\n  // declaring that and other required props here.\n\n\n  TableQuadrant.defaultProps = {\n    enableRowHeader: true\n  };\n  TableQuadrant = __decorate([polyfill], TableQuadrant);\n  return TableQuadrant;\n}(AbstractComponent2);\n\nexport { TableQuadrant };","map":{"version":3,"sources":["../../../src/quadrants/tableQuadrant.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractComponent2 } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport * as Errors from \"../common/errors\";\nexport var QuadrantType;\n(function (QuadrantType) {\n    /**\n     * The main quadrant beneath any frozen rows or columns.\n     */\n    QuadrantType[\"MAIN\"] = \"main\";\n    /**\n     * The top quadrant, containing column headers and frozen rows.\n     */\n    QuadrantType[\"TOP\"] = \"top\";\n    /**\n     * The left quadrant, containing row headers and frozen columns.\n     */\n    QuadrantType[\"LEFT\"] = \"left\";\n    /**\n     * The top-left quadrant, containing the headers and cells common to both\n     * the frozen columns and frozen rows.\n     */\n    QuadrantType[\"TOP_LEFT\"] = \"top-left\";\n})(QuadrantType || (QuadrantType = {}));\nvar TableQuadrant = /** @class */ (function (_super) {\n    __extends(TableQuadrant, _super);\n    function TableQuadrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableQuadrant.prototype.render = function () {\n        var _a, _b, _c, _d, _e, _f;\n        var _g = this.props, grid = _g.grid, enableRowHeader = _g.enableRowHeader, quadrantType = _g.quadrantType, bodyRenderer = _g.bodyRenderer;\n        var showFrozenRowsOnly = quadrantType === QuadrantType.TOP || quadrantType === QuadrantType.TOP_LEFT;\n        var showFrozenColumnsOnly = quadrantType === QuadrantType.LEFT || quadrantType === QuadrantType.TOP_LEFT;\n        var className = classNames(Classes.TABLE_QUADRANT, this.getQuadrantCssClass(), this.props.className);\n        var maybeMenu = enableRowHeader && ((_b = (_a = this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a));\n        var maybeRowHeader = enableRowHeader && ((_d = (_c = this.props).rowHeaderCellRenderer) === null || _d === void 0 ? void 0 : _d.call(_c, showFrozenRowsOnly));\n        var maybeColumnHeader = (_f = (_e = this.props).columnHeaderCellRenderer) === null || _f === void 0 ? void 0 : _f.call(_e, showFrozenColumnsOnly);\n        var body = quadrantType != null\n            ? bodyRenderer(quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly)\n            : bodyRenderer();\n        // need to set bottom container size to prevent overlay clipping on scroll\n        var bottomContainerStyle = {\n            height: grid.getHeight(),\n            width: grid.getWidth(),\n        };\n        return (React.createElement(\"div\", { className: className, style: this.props.style, ref: this.props.quadrantRef },\n            React.createElement(\"div\", { className: Classes.TABLE_QUADRANT_SCROLL_CONTAINER, ref: this.props.scrollContainerRef, onScroll: this.props.onScroll, onWheel: this.props.onWheel },\n                React.createElement(\"div\", { className: Classes.TABLE_TOP_CONTAINER },\n                    maybeMenu,\n                    maybeColumnHeader),\n                React.createElement(\"div\", { className: Classes.TABLE_BOTTOM_CONTAINER, style: bottomContainerStyle },\n                    maybeRowHeader,\n                    React.createElement(\"div\", { className: Classes.TABLE_QUADRANT_BODY_CONTAINER, ref: this.props.bodyRef }, body)))));\n    };\n    TableQuadrant.prototype.validateProps = function (nextProps) {\n        var quadrantType = nextProps.quadrantType;\n        if (nextProps.onScroll != null && quadrantType != null && quadrantType !== QuadrantType.MAIN) {\n            console.warn(Errors.QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED);\n        }\n    };\n    TableQuadrant.prototype.getQuadrantCssClass = function () {\n        switch (this.props.quadrantType) {\n            case QuadrantType.MAIN:\n                return Classes.TABLE_QUADRANT_MAIN;\n            case QuadrantType.TOP:\n                return Classes.TABLE_QUADRANT_TOP;\n            case QuadrantType.LEFT:\n                return Classes.TABLE_QUADRANT_LEFT;\n            case QuadrantType.TOP_LEFT:\n                return Classes.TABLE_QUADRANT_TOP_LEFT;\n            default:\n                return undefined;\n        }\n    };\n    // we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid\n    // declaring that and other required props here.\n    TableQuadrant.defaultProps = {\n        enableRowHeader: true,\n    };\n    TableQuadrant = __decorate([\n        polyfill\n    ], TableQuadrant);\n    return TableQuadrant;\n}(AbstractComponent2));\nexport { TableQuadrant };\n//# sourceMappingURL=tableQuadrant.js.map"]},"metadata":{},"sourceType":"module"}