{"ast":null,"code":"import _slicedToArray from \"E:/React Projects/deski-design/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { isFunction } from \"../../shared/utils\";\nimport { getYear, getMonth, getDay, getDateFromNumbers } from \"../utils\";\nexport var useCalendar = function useCalendar() {\n  var date = new Date();\n\n  var _useState = useState(getYear(date)),\n      _useState2 = _slicedToArray(_useState, 2),\n      showingYear = _useState2[0],\n      setShowingYear = _useState2[1];\n\n  var _useState3 = useState(getMonth(date)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showingMonth = _useState4[0],\n      setShowingMonth = _useState4[1];\n\n  var _useState5 = useState(getDay(date)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedDay = _useState6[0],\n      setSelectedDay = _useState6[1];\n\n  var _useState7 = useState(getMonth(date)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedMonth = _useState8[0],\n      setSelectedMonth = _useState8[1];\n\n  var _useState9 = useState(getYear(date)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedYear = _useState10[0],\n      setSelectedYear = _useState10[1];\n\n  var setSelectedDate = function setSelectedDate(_ref) {\n    var date = _ref.date,\n        onChange = _ref.onChange;\n\n    if (date.month > 12) {\n      setNextSelectedYear();\n      setNextShowingMonth();\n    } else if (date.month < 1) {\n      setPreviousShowingMonth();\n      setPreviousSelectedYear();\n    } else {\n      setSelectedMonth(date.month);\n      setSelectedYear(date.year);\n      setSelectedDay(date.day);\n    }\n\n    isFunction(onChange) && onChange(getDateFromNumbers(date.year, date.month, date.day));\n  };\n\n  var setNextSelectedYear = function setNextSelectedYear() {\n    setSelectedYear(function (year) {\n      return year + 1;\n    });\n    setSelectedMonth(1);\n  };\n\n  var setPreviousSelectedYear = function setPreviousSelectedYear() {\n    setSelectedYear(function (year) {\n      return year - 1;\n    });\n    setShowingMonth(12);\n  };\n\n  var setNextShowingYear = function setNextShowingYear() {\n    setShowingYear(function (year) {\n      return year + 1;\n    });\n    setShowingMonth(1);\n  };\n\n  var setPreviousShowingYear = function setPreviousShowingYear() {\n    setShowingYear(function (year) {\n      return year - 1;\n    });\n    setShowingMonth(12);\n  };\n\n  var setNextShowingMonth = function setNextShowingMonth() {\n    var nextMonth = showingMonth + 1;\n    if (nextMonth <= 12) setShowingMonth(nextMonth);\n    if (nextMonth > 12) setNextShowingYear();\n  };\n\n  var setPreviousShowingMonth = function setPreviousShowingMonth() {\n    var previousMonth = showingMonth - 1;\n    if (previousMonth >= 1) setShowingMonth(previousMonth);\n    if (previousMonth < 1) setPreviousShowingYear();\n  };\n\n  var handleAction = function handleAction(action) {\n    switch (action.action) {\n      case \"setSelectedDate\":\n        return setSelectedDate(action.payload);\n\n      case \"setShowingYear\":\n        return setShowingYear(action.payload);\n\n      case \"setShowingMonth\":\n        return setShowingMonth(action.payload);\n\n      case \"setNextShowingMonth\":\n        return setNextShowingMonth();\n\n      case \"setPreviousShowingMonth\":\n        return setPreviousShowingMonth();\n    }\n  };\n\n  return {\n    handleAction: handleAction,\n    showingYear: showingYear,\n    showingMonth: showingMonth,\n    selectedDay: selectedDay,\n    selectedMonth: selectedMonth,\n    selectedYear: selectedYear,\n    selectedDate: getDateFromNumbers(selectedYear, selectedMonth - 1, selectedDay)\n  };\n};","map":{"version":3,"sources":["E:/React Projects/deski-design/node_modules/small-google-calendar/dist/src/components/Calendar/hooks/useCalendar.js"],"names":["useState","isFunction","getYear","getMonth","getDay","getDateFromNumbers","useCalendar","date","Date","showingYear","setShowingYear","showingMonth","setShowingMonth","selectedDay","setSelectedDay","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","setSelectedDate","onChange","month","setNextSelectedYear","setNextShowingMonth","setPreviousShowingMonth","setPreviousSelectedYear","year","day","setNextShowingYear","setPreviousShowingYear","nextMonth","previousMonth","handleAction","action","payload","selectedDate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { isFunction } from \"../../shared/utils\";\r\nimport { getYear, getMonth, getDay, getDateFromNumbers } from \"../utils\";\r\nexport const useCalendar = () => {\r\n    const date = new Date();\r\n    const [showingYear, setShowingYear] = useState(getYear(date));\r\n    const [showingMonth, setShowingMonth] = useState(getMonth(date));\r\n    const [selectedDay, setSelectedDay] = useState(getDay(date));\r\n    const [selectedMonth, setSelectedMonth] = useState(getMonth(date));\r\n    const [selectedYear, setSelectedYear] = useState(getYear(date));\r\n    const setSelectedDate = ({ date, onChange }) => {\r\n        if (date.month > 12) {\r\n            setNextSelectedYear();\r\n            setNextShowingMonth();\r\n        }\r\n        else if (date.month < 1) {\r\n            setPreviousShowingMonth();\r\n            setPreviousSelectedYear();\r\n        }\r\n        else {\r\n            setSelectedMonth(date.month);\r\n            setSelectedYear(date.year);\r\n            setSelectedDay(date.day);\r\n        }\r\n        isFunction(onChange) && onChange(getDateFromNumbers(date.year, date.month, date.day));\r\n    };\r\n    const setNextSelectedYear = () => {\r\n        setSelectedYear(year => year + 1);\r\n        setSelectedMonth(1);\r\n    };\r\n    const setPreviousSelectedYear = () => {\r\n        setSelectedYear(year => year - 1);\r\n        setShowingMonth(12);\r\n    };\r\n    const setNextShowingYear = () => {\r\n        setShowingYear(year => year + 1);\r\n        setShowingMonth(1);\r\n    };\r\n    const setPreviousShowingYear = () => {\r\n        setShowingYear(year => year - 1);\r\n        setShowingMonth(12);\r\n    };\r\n    const setNextShowingMonth = () => {\r\n        const nextMonth = showingMonth + 1;\r\n        if (nextMonth <= 12)\r\n            setShowingMonth(nextMonth);\r\n        if (nextMonth > 12)\r\n            setNextShowingYear();\r\n    };\r\n    const setPreviousShowingMonth = () => {\r\n        const previousMonth = showingMonth - 1;\r\n        if (previousMonth >= 1)\r\n            setShowingMonth(previousMonth);\r\n        if (previousMonth < 1)\r\n            setPreviousShowingYear();\r\n    };\r\n    const handleAction = (action) => {\r\n        switch (action.action) {\r\n            case \"setSelectedDate\":\r\n                return setSelectedDate(action.payload);\r\n            case \"setShowingYear\":\r\n                return setShowingYear(action.payload);\r\n            case \"setShowingMonth\":\r\n                return setShowingMonth(action.payload);\r\n            case \"setNextShowingMonth\":\r\n                return setNextShowingMonth();\r\n            case \"setPreviousShowingMonth\":\r\n                return setPreviousShowingMonth();\r\n        }\r\n    };\r\n    return {\r\n        handleAction,\r\n        showingYear,\r\n        showingMonth,\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        selectedDate: getDateFromNumbers(selectedYear, selectedMonth - 1, selectedDay),\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}