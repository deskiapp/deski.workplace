{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX, Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { JSONFormat } from \"./formats/jsonFormat\";\nimport { TruncatedFormat } from \"./formats/truncatedFormat\";\nexport var emptyCellRenderer = function () {\n  return React.createElement(Cell, null);\n};\n\nvar Cell = function (_super) {\n  __extends(Cell, _super);\n\n  function Cell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Cell.prototype.shouldComponentUpdate = function (nextProps) {\n    // deeply compare \"style,\" because a new but identical object might have been provided.\n    return !CoreUtils.shallowCompareKeys(this.props, nextProps, {\n      exclude: [\"style\"]\n    }) || !CoreUtils.deepCompareKeys(this.props.style, nextProps.style);\n  };\n\n  Cell.prototype.render = function () {\n    var _a, _b;\n\n    var _c = this.props,\n        cellRef = _c.cellRef,\n        tabIndex = _c.tabIndex,\n        onKeyDown = _c.onKeyDown,\n        onKeyUp = _c.onKeyUp,\n        onKeyPress = _c.onKeyPress,\n        style = _c.style,\n        intent = _c.intent,\n        interactive = _c.interactive,\n        loading = _c.loading,\n        tooltip = _c.tooltip,\n        truncated = _c.truncated,\n        className = _c.className,\n        wrapText = _c.wrapText;\n    var classes = classNames(Classes.TABLE_CELL, CoreClasses.intentClass(intent), (_a = {}, _a[Classes.TABLE_CELL_INTERACTIVE] = interactive, _a[CoreClasses.LOADING] = loading, _a[Classes.TABLE_TRUNCATED_CELL] = truncated, _a), className);\n    var textClasses = classNames((_b = {}, _b[Classes.TABLE_TRUNCATED_TEXT] = truncated, _b[Classes.TABLE_NO_WRAP_TEXT] = !wrapText, _b)); // add width and height to the children, for use in shouldComponentUpdate in truncatedFormat\n    // note: these aren't actually used by truncated format, just in shouldComponentUpdate\n\n    var modifiedChildren = React.Children.map(this.props.children, function (child) {\n      var isFormatElement = CoreUtils.isElementOfType(child, TruncatedFormat) || CoreUtils.isElementOfType(child, JSONFormat);\n\n      if (style != null && React.isValidElement(child) && isFormatElement) {\n        return React.cloneElement(child, {\n          parentCellHeight: parseInt(style.height.toString(), 10),\n          parentCellWidth: parseInt(style.width.toString(), 10)\n        });\n      }\n\n      return child;\n    });\n    var content = React.createElement(\"div\", {\n      className: textClasses\n    }, modifiedChildren);\n    return React.createElement(\"div\", __assign({\n      className: classes,\n      title: tooltip,\n      ref: cellRef\n    }, {\n      style: style,\n      tabIndex: tabIndex,\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      onKeyPress: onKeyPress\n    }), React.createElement(LoadableContent, {\n      loading: loading,\n      variableLength: true\n    }, content));\n  };\n\n  Cell.displayName = DISPLAYNAME_PREFIX + \".Cell\";\n  Cell.defaultProps = {\n    truncated: true,\n    wrapText: false\n  };\n  return Cell;\n}(React.Component);\n\nexport { Cell };","map":{"version":3,"sources":["../../../src/cell/cell.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX, Utils as CoreUtils, } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { JSONFormat } from \"./formats/jsonFormat\";\nimport { TruncatedFormat } from \"./formats/truncatedFormat\";\nexport var emptyCellRenderer = function () { return React.createElement(Cell, null); };\nvar Cell = /** @class */ (function (_super) {\n    __extends(Cell, _super);\n    function Cell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Cell.prototype.shouldComponentUpdate = function (nextProps) {\n        // deeply compare \"style,\" because a new but identical object might have been provided.\n        return (!CoreUtils.shallowCompareKeys(this.props, nextProps, { exclude: [\"style\"] }) ||\n            !CoreUtils.deepCompareKeys(this.props.style, nextProps.style));\n    };\n    Cell.prototype.render = function () {\n        var _a, _b;\n        var _c = this.props, cellRef = _c.cellRef, tabIndex = _c.tabIndex, onKeyDown = _c.onKeyDown, onKeyUp = _c.onKeyUp, onKeyPress = _c.onKeyPress, style = _c.style, intent = _c.intent, interactive = _c.interactive, loading = _c.loading, tooltip = _c.tooltip, truncated = _c.truncated, className = _c.className, wrapText = _c.wrapText;\n        var classes = classNames(Classes.TABLE_CELL, CoreClasses.intentClass(intent), (_a = {},\n            _a[Classes.TABLE_CELL_INTERACTIVE] = interactive,\n            _a[CoreClasses.LOADING] = loading,\n            _a[Classes.TABLE_TRUNCATED_CELL] = truncated,\n            _a), className);\n        var textClasses = classNames((_b = {},\n            _b[Classes.TABLE_TRUNCATED_TEXT] = truncated,\n            _b[Classes.TABLE_NO_WRAP_TEXT] = !wrapText,\n            _b));\n        // add width and height to the children, for use in shouldComponentUpdate in truncatedFormat\n        // note: these aren't actually used by truncated format, just in shouldComponentUpdate\n        var modifiedChildren = React.Children.map(this.props.children, function (child) {\n            var isFormatElement = CoreUtils.isElementOfType(child, TruncatedFormat) || CoreUtils.isElementOfType(child, JSONFormat);\n            if (style != null && React.isValidElement(child) && isFormatElement) {\n                return React.cloneElement(child, {\n                    parentCellHeight: parseInt(style.height.toString(), 10),\n                    parentCellWidth: parseInt(style.width.toString(), 10),\n                });\n            }\n            return child;\n        });\n        var content = React.createElement(\"div\", { className: textClasses }, modifiedChildren);\n        return (React.createElement(\"div\", __assign({ className: classes, title: tooltip, ref: cellRef }, { style: style, tabIndex: tabIndex, onKeyDown: onKeyDown, onKeyUp: onKeyUp, onKeyPress: onKeyPress }),\n            React.createElement(LoadableContent, { loading: loading, variableLength: true }, content)));\n    };\n    Cell.displayName = DISPLAYNAME_PREFIX + \".Cell\";\n    Cell.defaultProps = {\n        truncated: true,\n        wrapText: false,\n    };\n    return Cell;\n}(React.Component));\nexport { Cell };\n//# sourceMappingURL=cell.js.map"]},"metadata":{},"sourceType":"module"}