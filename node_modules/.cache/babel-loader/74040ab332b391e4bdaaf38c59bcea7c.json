{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractComponent2, Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport { ContextMenuTargetWrapper } from \"./common/contextMenuTargetWrapper\";\nimport { RenderMode } from \"./common/renderMode\";\nimport { MenuContext } from \"./interactions/menus\";\nimport { DragSelectable } from \"./interactions/selectable\";\nimport { Regions } from \"./regions\";\nimport { cellClassNames, TableBodyCells } from \"./tableBodyCells\";\nvar DEEP_COMPARE_KEYS = [\"selectedRegions\"];\n\nvar TableBody = function (_super) {\n  __extends(TableBody, _super);\n\n  function TableBody() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderContextMenu = function (e) {\n      var _a = _this.props,\n          grid = _a.grid,\n          onFocusedCell = _a.onFocusedCell,\n          onSelection = _a.onSelection,\n          bodyContextMenuRenderer = _a.bodyContextMenuRenderer,\n          selectedRegions = _a.selectedRegions;\n      var numRows = grid.numRows,\n          numCols = grid.numCols;\n\n      if (bodyContextMenuRenderer == null) {\n        return undefined;\n      }\n\n      var targetRegion = _this.locateClick(e.nativeEvent);\n\n      var nextSelectedRegions = selectedRegions; // if the event did not happen within a selected region, clear all\n      // selections and select the right-clicked cell.\n\n      var foundIndex = Regions.findContainingRegion(selectedRegions, targetRegion);\n\n      if (foundIndex < 0) {\n        nextSelectedRegions = [targetRegion];\n        onSelection(nextSelectedRegions); // move the focused cell to the new region.\n\n        var nextFocusedCell = __assign(__assign({}, Regions.getFocusCellCoordinatesFromRegion(targetRegion)), {\n          focusSelectionIndex: 0\n        });\n\n        onFocusedCell(nextFocusedCell);\n      }\n\n      var menuContext = new MenuContext(targetRegion, nextSelectedRegions, numRows, numCols);\n      var contextMenu = bodyContextMenuRenderer(menuContext);\n      return contextMenu == null ? undefined : contextMenu;\n    }; // Callbacks\n    // =========\n\n\n    _this.handleSelectionEnd = function () {\n      _this.activationCell = null; // not strictly required, but good practice\n    };\n\n    _this.locateClick = function (event) {\n      _this.activationCell = _this.props.locator.convertPointToCell(event.clientX, event.clientY);\n      return Regions.cell(_this.activationCell.row, _this.activationCell.col);\n    };\n\n    _this.locateDrag = function (_event, coords, returnEndOnly) {\n      if (returnEndOnly === void 0) {\n        returnEndOnly = false;\n      }\n\n      var start = _this.activationCell;\n\n      var end = _this.props.locator.convertPointToCell(coords.current[0], coords.current[1]);\n\n      return returnEndOnly ? Regions.cell(end.row, end.col) : Regions.cell(start.row, start.col, end.row, end.col);\n    };\n\n    return _this;\n  } // TODO: Does this method need to be public?\n  // (see: https://github.com/palantir/blueprint/issues/1617)\n\n\n  TableBody.cellClassNames = function (rowIndex, columnIndex) {\n    return cellClassNames(rowIndex, columnIndex);\n  };\n\n  TableBody.prototype.shouldComponentUpdate = function (nextProps) {\n    return !CoreUtils.shallowCompareKeys(this.props, nextProps, {\n      exclude: DEEP_COMPARE_KEYS\n    }) || !CoreUtils.deepCompareKeys(this.props, nextProps, DEEP_COMPARE_KEYS);\n  };\n\n  TableBody.prototype.render = function () {\n    var _a = this.props,\n        grid = _a.grid,\n        numFrozenColumns = _a.numFrozenColumns,\n        numFrozenRows = _a.numFrozenRows;\n    var defaultStyle = grid.getRect().sizeStyle();\n    var style = {\n      height: numFrozenRows != null ? grid.getCumulativeHeightAt(numFrozenRows - 1) : defaultStyle.height,\n      width: numFrozenColumns != null ? grid.getCumulativeWidthAt(numFrozenColumns - 1) : defaultStyle.width\n    };\n    return React.createElement(DragSelectable, {\n      enableMultipleSelection: this.props.enableMultipleSelection,\n      focusedCell: this.props.focusedCell,\n      locateClick: this.locateClick,\n      locateDrag: this.locateDrag,\n      onFocusedCell: this.props.onFocusedCell,\n      onSelection: this.props.onSelection,\n      onSelectionEnd: this.handleSelectionEnd,\n      selectedRegions: this.props.selectedRegions,\n      selectedRegionTransform: this.props.selectedRegionTransform\n    }, React.createElement(ContextMenuTargetWrapper, {\n      className: classNames(Classes.TABLE_BODY_VIRTUAL_CLIENT, Classes.TABLE_CELL_CLIENT),\n      renderContextMenu: this.renderContextMenu,\n      style: style\n    }, React.createElement(TableBodyCells, {\n      cellRenderer: this.props.cellRenderer,\n      focusedCell: this.props.focusedCell,\n      grid: grid,\n      loading: this.props.loading,\n      onCompleteRender: this.props.onCompleteRender,\n      renderMode: this.props.renderMode,\n      columnIndexStart: this.props.columnIndexStart,\n      columnIndexEnd: this.props.columnIndexEnd,\n      rowIndexStart: this.props.rowIndexStart,\n      rowIndexEnd: this.props.rowIndexEnd,\n      viewportRect: this.props.viewportRect\n    })));\n  };\n\n  TableBody.defaultProps = {\n    loading: false,\n    renderMode: RenderMode.BATCH\n  };\n  return TableBody;\n}(AbstractComponent2);\n\nexport { TableBody };","map":{"version":3,"sources":["../../src/tableBody.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,kBAAT,EAA6B,KAAK,IAAI,SAAtC,QAAuD,mBAAvD;AAGA,OAAO,KAAK,OAAZ,MAAyB,kBAAzB;AACA,SAAS,wBAAT,QAAyC,mCAAzC;AACA,SAAS,UAAT,QAA2B,qBAA3B;AAEA,SAA+B,WAA/B,QAAkD,sBAAlD;AACA,SAAS,cAAT,QAAiD,2BAAjD;AAEA,SAAiB,OAAjB,QAAgC,WAAhC;AACA,SAAS,cAAT,EAA+C,cAA/C,QAAqE,kBAArE;AA0BA,IAAM,iBAAiB,GAAiC,CAAC,iBAAD,CAAxD;;AAEA,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAiEW,IAAA,KAAA,CAAA,iBAAA,GAAoB,UAAC,CAAD,EAAiC;AAClD,UAAA,EAAA,GAAiF,KAAI,CAAC,KAAtF;AAAA,UAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,UAAQ,aAAa,GAAA,EAAA,CAAA,aAArB;AAAA,UAAuB,WAAW,GAAA,EAAA,CAAA,WAAlC;AAAA,UAAoC,uBAAuB,GAAA,EAAA,CAAA,uBAA3D;AAAA,UAA6D,eAAe,GAAA,EAAA,CAAA,eAA5E;AACE,UAAA,OAAO,GAAc,IAAI,CAAlB,OAAP;AAAA,UAAS,OAAO,GAAK,IAAI,CAAT,OAAhB;;AAER,UAAI,uBAAuB,IAAI,IAA/B,EAAqC;AACjC,eAAO,SAAP;AACH;;AAED,UAAM,YAAY,GAAG,KAAI,CAAC,WAAL,CAAiB,CAAC,CAAC,WAAnB,CAArB;;AAEA,UAAI,mBAAmB,GAAa,eAApC,CAVwD,CAYxD;AACA;;AACA,UAAM,UAAU,GAAG,OAAO,CAAC,oBAAR,CAA6B,eAA7B,EAA8C,YAA9C,CAAnB;;AACA,UAAI,UAAU,GAAG,CAAjB,EAAoB;AAChB,QAAA,mBAAmB,GAAG,CAAC,YAAD,CAAtB;AACA,QAAA,WAAW,CAAC,mBAAD,CAAX,CAFgB,CAIhB;;AACA,YAAM,eAAe,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACd,OAAO,CAAC,iCAAR,CAA0C,YAA1C,CADc,CAAA,EACyC;AAC1D,UAAA,mBAAmB,EAAE;AADqC,SADzC,CAArB;;AAIA,QAAA,aAAa,CAAC,eAAD,CAAb;AACH;;AAED,UAAM,WAAW,GAAG,IAAI,WAAJ,CAAgB,YAAhB,EAA8B,mBAA9B,EAAmD,OAAnD,EAA4D,OAA5D,CAApB;AACA,UAAM,WAAW,GAAG,uBAAuB,CAAC,WAAD,CAA3C;AAEA,aAAO,WAAW,IAAI,IAAf,GAAsB,SAAtB,GAAkC,WAAzC;AACH,KA/BM,CAjEX,CAkGI;AACA;;;AAEQ,IAAA,KAAA,CAAA,kBAAA,GAAqB,YAAA;AACzB,MAAA,KAAI,CAAC,cAAL,GAAsB,IAAtB,CADyB,CACG;AAC/B,KAFO;;AAIA,IAAA,KAAA,CAAA,WAAA,GAAc,UAAC,KAAD,EAAkB;AACpC,MAAA,KAAI,CAAC,cAAL,GAAsB,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,kBAAnB,CAAsC,KAAK,CAAC,OAA5C,EAAqD,KAAK,CAAC,OAA3D,CAAtB;AACA,aAAO,OAAO,CAAC,IAAR,CAAa,KAAI,CAAC,cAAL,CAAoB,GAAjC,EAAsC,KAAI,CAAC,cAAL,CAAoB,GAA1D,CAAP;AACH,KAHO;;AAKA,IAAA,KAAA,CAAA,UAAA,GAAa,UAAC,MAAD,EAAqB,MAArB,EAA8C,aAA9C,EAAmE;AAArB,UAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,aAAA,GAAA,KAAA;AAAqB;;AACpF,UAAM,KAAK,GAAG,KAAI,CAAC,cAAnB;;AACA,UAAM,GAAG,GAAG,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,kBAAnB,CAAsC,MAAM,CAAC,OAAP,CAAe,CAAf,CAAtC,EAAyD,MAAM,CAAC,OAAP,CAAe,CAAf,CAAzD,CAAZ;;AACA,aAAO,aAAa,GAAG,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,GAAjB,EAAsB,GAAG,CAAC,GAA1B,CAAH,GAAoC,OAAO,CAAC,IAAR,CAAa,KAAK,CAAC,GAAnB,EAAwB,KAAK,CAAC,GAA9B,EAAmC,GAAG,CAAC,GAAvC,EAA4C,GAAG,CAAC,GAAhD,CAAxD;AACH,KAJO;;;AAKX,GAnHD,CAMI;AACA;;;AACc,EAAA,SAAA,CAAA,cAAA,GAAd,UAA6B,QAA7B,EAA+C,WAA/C,EAAkE;AAC9D,WAAO,cAAc,CAAC,QAAD,EAAW,WAAX,CAArB;AACH,GAFa;;AAMP,EAAA,SAAA,CAAA,SAAA,CAAA,qBAAA,GAAP,UAA6B,SAA7B,EAAuD;AACnD,WACI,CAAC,SAAS,CAAC,kBAAV,CAA6B,KAAK,KAAlC,EAAyC,SAAzC,EAAoD;AAAE,MAAA,OAAO,EAAE;AAAX,KAApD,CAAD,IACA,CAAC,SAAS,CAAC,eAAV,CAA0B,KAAK,KAA/B,EAAsC,SAAtC,EAAiD,iBAAjD,CAFL;AAIH,GALM;;AAOA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAA4C,KAAK,KAAjD;AAAA,QAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,QAAQ,gBAAgB,GAAA,EAAA,CAAA,gBAAxB;AAAA,QAA0B,aAAa,GAAA,EAAA,CAAA,aAAvC;AAEN,QAAM,YAAY,GAAG,IAAI,CAAC,OAAL,GAAe,SAAf,EAArB;AACA,QAAM,KAAK,GAAG;AACV,MAAA,MAAM,EAAE,aAAa,IAAI,IAAjB,GAAwB,IAAI,CAAC,qBAAL,CAA2B,aAAa,GAAG,CAA3C,CAAxB,GAAwE,YAAY,CAAC,MADnF;AAEV,MAAA,KAAK,EAAE,gBAAgB,IAAI,IAApB,GAA2B,IAAI,CAAC,oBAAL,CAA0B,gBAAgB,GAAG,CAA7C,CAA3B,GAA6E,YAAY,CAAC;AAFvF,KAAd;AAKA,WACI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACX,MAAA,uBAAuB,EAAE,KAAK,KAAL,CAAW,uBADzB;AAEX,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAFb;AAGX,MAAA,WAAW,EAAE,KAAK,WAHP;AAIX,MAAA,UAAU,EAAE,KAAK,UAJN;AAKX,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,aALf;AAMX,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WANb;AAOX,MAAA,cAAc,EAAE,KAAK,kBAPV;AAQX,MAAA,eAAe,EAAE,KAAK,KAAL,CAAW,eARjB;AASX,MAAA,uBAAuB,EAAE,KAAK,KAAL,CAAW;AATzB,KAAf,EAWI,KAAA,CAAA,aAAA,CAAC,wBAAD,EAAyB;AACrB,MAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,yBAAT,EAAoC,OAAO,CAAC,iBAA5C,CADA;AAErB,MAAA,iBAAiB,EAAE,KAAK,iBAFH;AAGrB,MAAA,KAAK,EAAE;AAHc,KAAzB,EAKI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACX,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW,YADd;AAEX,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAFb;AAGX,MAAA,IAAI,EAAE,IAHK;AAIX,MAAA,OAAO,EAAE,KAAK,KAAL,CAAW,OAJT;AAKX,MAAA,gBAAgB,EAAE,KAAK,KAAL,CAAW,gBALlB;AAMX,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UANZ;AAOX,MAAA,gBAAgB,EAAE,KAAK,KAAL,CAAW,gBAPlB;AAQX,MAAA,cAAc,EAAE,KAAK,KAAL,CAAW,cARhB;AASX,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,aATf;AAUX,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAVb;AAWX,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW;AAXd,KAAf,CALJ,CAXJ,CADJ;AAiCH,GA1CM;;AApBO,EAAA,SAAA,CAAA,YAAA,GAAe;AACzB,IAAA,OAAO,EAAE,KADgB;AAEzB,IAAA,UAAU,EAAE,UAAU,CAAC;AAFE,GAAf;AAkHlB,SAAA,SAAA;AAAC,CAnHD,CAA+B,kBAA/B,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractComponent2, Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport { ContextMenuTargetWrapper } from \"./common/contextMenuTargetWrapper\";\nimport { RenderMode } from \"./common/renderMode\";\nimport { MenuContext } from \"./interactions/menus\";\nimport { DragSelectable } from \"./interactions/selectable\";\nimport { Regions } from \"./regions\";\nimport { cellClassNames, TableBodyCells } from \"./tableBodyCells\";\nvar DEEP_COMPARE_KEYS = [\"selectedRegions\"];\nvar TableBody = /** @class */ (function (_super) {\n    __extends(TableBody, _super);\n    function TableBody() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderContextMenu = function (e) {\n            var _a = _this.props, grid = _a.grid, onFocusedCell = _a.onFocusedCell, onSelection = _a.onSelection, bodyContextMenuRenderer = _a.bodyContextMenuRenderer, selectedRegions = _a.selectedRegions;\n            var numRows = grid.numRows, numCols = grid.numCols;\n            if (bodyContextMenuRenderer == null) {\n                return undefined;\n            }\n            var targetRegion = _this.locateClick(e.nativeEvent);\n            var nextSelectedRegions = selectedRegions;\n            // if the event did not happen within a selected region, clear all\n            // selections and select the right-clicked cell.\n            var foundIndex = Regions.findContainingRegion(selectedRegions, targetRegion);\n            if (foundIndex < 0) {\n                nextSelectedRegions = [targetRegion];\n                onSelection(nextSelectedRegions);\n                // move the focused cell to the new region.\n                var nextFocusedCell = __assign(__assign({}, Regions.getFocusCellCoordinatesFromRegion(targetRegion)), { focusSelectionIndex: 0 });\n                onFocusedCell(nextFocusedCell);\n            }\n            var menuContext = new MenuContext(targetRegion, nextSelectedRegions, numRows, numCols);\n            var contextMenu = bodyContextMenuRenderer(menuContext);\n            return contextMenu == null ? undefined : contextMenu;\n        };\n        // Callbacks\n        // =========\n        _this.handleSelectionEnd = function () {\n            _this.activationCell = null; // not strictly required, but good practice\n        };\n        _this.locateClick = function (event) {\n            _this.activationCell = _this.props.locator.convertPointToCell(event.clientX, event.clientY);\n            return Regions.cell(_this.activationCell.row, _this.activationCell.col);\n        };\n        _this.locateDrag = function (_event, coords, returnEndOnly) {\n            if (returnEndOnly === void 0) { returnEndOnly = false; }\n            var start = _this.activationCell;\n            var end = _this.props.locator.convertPointToCell(coords.current[0], coords.current[1]);\n            return returnEndOnly ? Regions.cell(end.row, end.col) : Regions.cell(start.row, start.col, end.row, end.col);\n        };\n        return _this;\n    }\n    // TODO: Does this method need to be public?\n    // (see: https://github.com/palantir/blueprint/issues/1617)\n    TableBody.cellClassNames = function (rowIndex, columnIndex) {\n        return cellClassNames(rowIndex, columnIndex);\n    };\n    TableBody.prototype.shouldComponentUpdate = function (nextProps) {\n        return (!CoreUtils.shallowCompareKeys(this.props, nextProps, { exclude: DEEP_COMPARE_KEYS }) ||\n            !CoreUtils.deepCompareKeys(this.props, nextProps, DEEP_COMPARE_KEYS));\n    };\n    TableBody.prototype.render = function () {\n        var _a = this.props, grid = _a.grid, numFrozenColumns = _a.numFrozenColumns, numFrozenRows = _a.numFrozenRows;\n        var defaultStyle = grid.getRect().sizeStyle();\n        var style = {\n            height: numFrozenRows != null ? grid.getCumulativeHeightAt(numFrozenRows - 1) : defaultStyle.height,\n            width: numFrozenColumns != null ? grid.getCumulativeWidthAt(numFrozenColumns - 1) : defaultStyle.width,\n        };\n        return (React.createElement(DragSelectable, { enableMultipleSelection: this.props.enableMultipleSelection, focusedCell: this.props.focusedCell, locateClick: this.locateClick, locateDrag: this.locateDrag, onFocusedCell: this.props.onFocusedCell, onSelection: this.props.onSelection, onSelectionEnd: this.handleSelectionEnd, selectedRegions: this.props.selectedRegions, selectedRegionTransform: this.props.selectedRegionTransform },\n            React.createElement(ContextMenuTargetWrapper, { className: classNames(Classes.TABLE_BODY_VIRTUAL_CLIENT, Classes.TABLE_CELL_CLIENT), renderContextMenu: this.renderContextMenu, style: style },\n                React.createElement(TableBodyCells, { cellRenderer: this.props.cellRenderer, focusedCell: this.props.focusedCell, grid: grid, loading: this.props.loading, onCompleteRender: this.props.onCompleteRender, renderMode: this.props.renderMode, columnIndexStart: this.props.columnIndexStart, columnIndexEnd: this.props.columnIndexEnd, rowIndexStart: this.props.rowIndexStart, rowIndexEnd: this.props.rowIndexEnd, viewportRect: this.props.viewportRect }))));\n    };\n    TableBody.defaultProps = {\n        loading: false,\n        renderMode: RenderMode.BATCH,\n    };\n    return TableBody;\n}(AbstractComponent2));\nexport { TableBody };\n//# sourceMappingURL=tableBody.js.map"]},"metadata":{},"sourceType":"module"}