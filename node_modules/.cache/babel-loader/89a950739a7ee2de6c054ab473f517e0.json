{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport { DragEvents } from \"./dragEvents\";\nvar REATTACH_PROPS_KEYS = [\"stopPropagation\", \"preventDefault\"];\n/**\n * This component provides a simple interface for combined drag and/or click\n * events.\n *\n * Since the mouse interactions for drag and click are overloaded, here are\n * the events that will fire in these cases:\n *\n * A Click Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user releases the mouse button without moving it, triggering the\n *    onClick callback.\n *\n * A Drag Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user moves the mouse, triggering the onDragMove callback.\n * 3. The user moves the mouse, triggering the onDragMove callback.\n * 4. The user moves the mouse, triggering the onDragMove callback.\n * 5. The user releases the mouse button, triggering a final onDragMove\n *    callback as well as an onDragEnd callback.\n *\n * If `false` is returned from the onActivate callback, no further events\n * will be fired until the next activation.\n */\n\nvar Draggable = function (_super) {\n  __extends(Draggable, _super);\n\n  function Draggable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Draggable.prototype.render = function () {\n    return React.Children.only(this.props.children);\n  };\n\n  Draggable.prototype.componentDidUpdate = function (prevProps) {\n    var propsWhitelist = {\n      include: REATTACH_PROPS_KEYS\n    };\n\n    if (this.events && !CoreUtils.shallowCompareKeys(prevProps, this.props, propsWhitelist)) {\n      // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n      // eslint-disable-next-line react/no-find-dom-node\n      this.events.attach(ReactDOM.findDOMNode(this), this.props);\n    }\n  };\n\n  Draggable.prototype.componentDidMount = function () {\n    this.events = new DragEvents(); // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n    // eslint-disable-next-line react/no-find-dom-node\n\n    this.events.attach(ReactDOM.findDOMNode(this), this.props);\n  };\n\n  Draggable.prototype.componentWillUnmount = function () {\n    this.events.detach();\n    delete this.events;\n  };\n\n  Draggable.defaultProps = {\n    preventDefault: true,\n    stopPropagation: false\n  };\n  return Draggable;\n}(React.PureComponent);\n\nexport { Draggable };","map":{"version":3,"sources":["../../../src/interactions/draggable.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AAEA,SAAgB,KAAK,IAAI,SAAzB,QAA0C,mBAA1C;AAEA,SAAS,UAAT,QAA2B,cAA3B;AAKA,IAAM,mBAAmB,GAAG,CAAC,iBAAD,EAAoB,gBAApB,CAA5B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBG;;AACH,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;;AAgCC;;AAxBU,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,WAAO,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,KAAK,KAAL,CAAW,QAA/B,CAAP;AACH,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,UAA0B,SAA1B,EAAoD;AAChD,QAAM,cAAc,GAAG;AAAE,MAAA,OAAO,EAAE;AAAX,KAAvB;;AACA,QAAI,KAAK,MAAL,IAAe,CAAC,SAAS,CAAC,kBAAV,CAA6B,SAA7B,EAAwC,KAAK,KAA7C,EAAoD,cAApD,CAApB,EAAyF;AACrF;AACA;AACA,WAAK,MAAL,CAAY,MAAZ,CAAmB,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAnB,EAA8D,KAAK,KAAnE;AACH;AACJ,GAPM;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACI,SAAK,MAAL,GAAc,IAAI,UAAJ,EAAd,CADJ,CAEI;AACA;;AACA,SAAK,MAAL,CAAY,MAAZ,CAAmB,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAnB,EAA8D,KAAK,KAAnE;AACH,GALM;;AAOA,EAAA,SAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;AACI,SAAK,MAAL,CAAY,MAAZ;AACA,WAAO,KAAK,MAAZ;AACH,GAHM;;AA3BO,EAAA,SAAA,CAAA,YAAA,GAAe;AACzB,IAAA,cAAc,EAAE,IADS;AAEzB,IAAA,eAAe,EAAE;AAFQ,GAAf;AA+BlB,SAAA,SAAA;AAAC,CAhCD,CAA+B,KAAK,CAAC,aAArC,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport { DragEvents } from \"./dragEvents\";\nvar REATTACH_PROPS_KEYS = [\"stopPropagation\", \"preventDefault\"];\n/**\n * This component provides a simple interface for combined drag and/or click\n * events.\n *\n * Since the mouse interactions for drag and click are overloaded, here are\n * the events that will fire in these cases:\n *\n * A Click Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user releases the mouse button without moving it, triggering the\n *    onClick callback.\n *\n * A Drag Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user moves the mouse, triggering the onDragMove callback.\n * 3. The user moves the mouse, triggering the onDragMove callback.\n * 4. The user moves the mouse, triggering the onDragMove callback.\n * 5. The user releases the mouse button, triggering a final onDragMove\n *    callback as well as an onDragEnd callback.\n *\n * If `false` is returned from the onActivate callback, no further events\n * will be fired until the next activation.\n */\nvar Draggable = /** @class */ (function (_super) {\n    __extends(Draggable, _super);\n    function Draggable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Draggable.prototype.render = function () {\n        return React.Children.only(this.props.children);\n    };\n    Draggable.prototype.componentDidUpdate = function (prevProps) {\n        var propsWhitelist = { include: REATTACH_PROPS_KEYS };\n        if (this.events && !CoreUtils.shallowCompareKeys(prevProps, this.props, propsWhitelist)) {\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n            // eslint-disable-next-line react/no-find-dom-node\n            this.events.attach(ReactDOM.findDOMNode(this), this.props);\n        }\n    };\n    Draggable.prototype.componentDidMount = function () {\n        this.events = new DragEvents();\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n        // eslint-disable-next-line react/no-find-dom-node\n        this.events.attach(ReactDOM.findDOMNode(this), this.props);\n    };\n    Draggable.prototype.componentWillUnmount = function () {\n        this.events.detach();\n        delete this.events;\n    };\n    Draggable.defaultProps = {\n        preventDefault: true,\n        stopPropagation: false,\n    };\n    return Draggable;\n}(React.PureComponent));\nexport { Draggable };\n//# sourceMappingURL=draggable.js.map"]},"metadata":{},"sourceType":"module"}