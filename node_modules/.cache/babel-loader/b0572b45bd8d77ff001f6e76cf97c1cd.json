{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\n\nvar GuideLayer = function (_super) {\n  __extends(GuideLayer, _super);\n\n  function GuideLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderVerticalGuide = function (offset, index) {\n      var _a;\n\n      var style = {\n        left: offset + \"px\"\n      };\n      var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_VERTICAL_GUIDE, (_a = {}, _a[Classes.TABLE_VERTICAL_GUIDE + \"-flush-left\"] = offset === 0, _a));\n      return React.createElement(\"div\", {\n        className: className,\n        key: index,\n        style: style\n      });\n    };\n\n    _this.renderHorizontalGuide = function (offset, index) {\n      var _a;\n\n      var style = {\n        top: offset + \"px\"\n      };\n      var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_HORIZONTAL_GUIDE, (_a = {}, _a[Classes.TABLE_HORIZONTAL_GUIDE + \"-flush-top\"] = offset === 0, _a));\n      return React.createElement(\"div\", {\n        className: className,\n        key: index,\n        style: style\n      });\n    };\n\n    return _this;\n  }\n\n  GuideLayer.prototype.shouldComponentUpdate = function (nextProps) {\n    if (this.props.className !== nextProps.className) {\n      return true;\n    } // shallow-comparing guide arrays leads to tons of unnecessary re-renders, so we check the\n    // array contents explicitly.\n\n\n    return !CoreUtils.arraysEqual(this.props.verticalGuides, nextProps.verticalGuides) || !CoreUtils.arraysEqual(this.props.horizontalGuides, nextProps.horizontalGuides);\n  };\n\n  GuideLayer.prototype.render = function () {\n    var _a = this.props,\n        verticalGuides = _a.verticalGuides,\n        horizontalGuides = _a.horizontalGuides,\n        className = _a.className;\n    var verticals = verticalGuides == null ? undefined : verticalGuides.map(this.renderVerticalGuide);\n    var horizontals = horizontalGuides == null ? undefined : horizontalGuides.map(this.renderHorizontalGuide);\n    return React.createElement(\"div\", {\n      className: classNames(className, Classes.TABLE_OVERLAY_LAYER)\n    }, verticals, horizontals);\n  };\n\n  return GuideLayer;\n}(React.Component);\n\nexport { GuideLayer };","map":{"version":3,"sources":["../../../src/layers/guides.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nvar GuideLayer = /** @class */ (function (_super) {\n    __extends(GuideLayer, _super);\n    function GuideLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderVerticalGuide = function (offset, index) {\n            var _a;\n            var style = {\n                left: offset + \"px\",\n            };\n            var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_VERTICAL_GUIDE, (_a = {},\n                _a[Classes.TABLE_VERTICAL_GUIDE + \"-flush-left\"] = offset === 0,\n                _a));\n            return React.createElement(\"div\", { className: className, key: index, style: style });\n        };\n        _this.renderHorizontalGuide = function (offset, index) {\n            var _a;\n            var style = {\n                top: offset + \"px\",\n            };\n            var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_HORIZONTAL_GUIDE, (_a = {},\n                _a[Classes.TABLE_HORIZONTAL_GUIDE + \"-flush-top\"] = offset === 0,\n                _a));\n            return React.createElement(\"div\", { className: className, key: index, style: style });\n        };\n        return _this;\n    }\n    GuideLayer.prototype.shouldComponentUpdate = function (nextProps) {\n        if (this.props.className !== nextProps.className) {\n            return true;\n        }\n        // shallow-comparing guide arrays leads to tons of unnecessary re-renders, so we check the\n        // array contents explicitly.\n        return (!CoreUtils.arraysEqual(this.props.verticalGuides, nextProps.verticalGuides) ||\n            !CoreUtils.arraysEqual(this.props.horizontalGuides, nextProps.horizontalGuides));\n    };\n    GuideLayer.prototype.render = function () {\n        var _a = this.props, verticalGuides = _a.verticalGuides, horizontalGuides = _a.horizontalGuides, className = _a.className;\n        var verticals = verticalGuides == null ? undefined : verticalGuides.map(this.renderVerticalGuide);\n        var horizontals = horizontalGuides == null ? undefined : horizontalGuides.map(this.renderHorizontalGuide);\n        return (React.createElement(\"div\", { className: classNames(className, Classes.TABLE_OVERLAY_LAYER) },\n            verticals,\n            horizontals));\n    };\n    return GuideLayer;\n}(React.Component));\nexport { GuideLayer };\n//# sourceMappingURL=guides.js.map"]},"metadata":{},"sourceType":"module"}