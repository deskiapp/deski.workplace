{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2 } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { HeaderCell } from \"./headerCell\";\n\nvar RowHeaderCell = function (_super) {\n  __extends(RowHeaderCell, _super);\n\n  function RowHeaderCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RowHeaderCell.prototype.render = function () {\n    var _a = this.props,\n        // from IRowHeaderCellProps\n    enableRowReordering = _a.enableRowReordering,\n        isRowSelected = _a.isRowSelected,\n        name = _a.name,\n        nameRenderer = _a.nameRenderer,\n        // from IHeaderProps\n    spreadableProps = __rest(_a, [\"enableRowReordering\", \"isRowSelected\", \"name\", \"nameRenderer\"]);\n\n    var defaultName = React.createElement(\"div\", {\n      className: Classes.TABLE_ROW_NAME_TEXT\n    }, name);\n    var nameComponent = React.createElement(LoadableContent, {\n      loading: spreadableProps.loading\n    }, nameRenderer == null ? defaultName : nameRenderer(name, spreadableProps.index));\n    return React.createElement(HeaderCell, __assign({\n      isReorderable: this.props.enableRowReordering,\n      isSelected: this.props.isRowSelected\n    }, spreadableProps), React.createElement(\"div\", {\n      className: Classes.TABLE_ROW_NAME\n    }, nameComponent), this.props.children, spreadableProps.loading ? undefined : spreadableProps.resizeHandle);\n  };\n\n  RowHeaderCell = __decorate([polyfill], RowHeaderCell);\n  return RowHeaderCell;\n}(AbstractPureComponent2);\n\nexport { RowHeaderCell };","map":{"version":3,"sources":["../../../src/headers/rowHeaderCell.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,QAA8C,mBAA9C;AAEA,OAAO,KAAK,OAAZ,MAAyB,mBAAzB;AACA,SAAS,eAAT,QAAgC,2BAAhC;AACA,SAAS,UAAT,QAA6C,cAA7C;;AA4BA,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAnC,WAAA,aAAA,GAAA;;AAgCC;;AA/BU,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,QAAM,EAAA,GASF,KAAK,KATT;AAAA,QACI;AACA,IAAA,mBAAmB,GAAA,EAAA,CAAA,mBAFvB;AAAA,QAGI,aAAa,GAAA,EAAA,CAAA,aAHjB;AAAA,QAII,IAAI,GAAA,EAAA,CAAA,IAJR;AAAA,QAKI,YAAY,GAAA,EAAA,CAAA,YALhB;AAAA,QAOI;AACG,IAAA,eAAe,GAAA,MAAA,CAAA,EAAA,EARhB,CAAA,qBAAA,EAAA,eAAA,EAAA,MAAA,EAAA,cAAA,CAQgB,CARtB;;AAUA,QAAM,WAAW,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAA8C,IAA9C,CAApB;AAEA,QAAM,aAAa,GACf,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,MAAA,OAAO,EAAE,eAAe,CAAC;AAA1B,KAAhB,EACK,YAAY,IAAI,IAAhB,GAAuB,WAAvB,GAAqC,YAAY,CAAC,IAAD,EAAO,eAAe,CAAC,KAAvB,CADtD,CADJ;AAMA,WACI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA;AACP,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,mBADnB;AAEP,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW;AAFhB,KAAA,EAGH,eAHG,CAAX,EAKI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAAyC,aAAzC,CALJ,EAMK,KAAK,KAAL,CAAW,QANhB,EAOK,eAAe,CAAC,OAAhB,GAA0B,SAA1B,GAAsC,eAAe,CAAC,YAP3D,CADJ;AAWH,GA9BM;;AADE,EAAA,aAAa,GAAA,UAAA,CAAA,CADzB,QACyB,CAAA,EAAb,aAAa,CAAb;AAgCb,SAAA,aAAA;AAAC,CAhCD,CAAmC,sBAAnC,CAAA;;SAAa,a","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2 } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { HeaderCell } from \"./headerCell\";\nvar RowHeaderCell = /** @class */ (function (_super) {\n    __extends(RowHeaderCell, _super);\n    function RowHeaderCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RowHeaderCell.prototype.render = function () {\n        var _a = this.props, \n        // from IRowHeaderCellProps\n        enableRowReordering = _a.enableRowReordering, isRowSelected = _a.isRowSelected, name = _a.name, nameRenderer = _a.nameRenderer, \n        // from IHeaderProps\n        spreadableProps = __rest(_a, [\"enableRowReordering\", \"isRowSelected\", \"name\", \"nameRenderer\"]);\n        var defaultName = React.createElement(\"div\", { className: Classes.TABLE_ROW_NAME_TEXT }, name);\n        var nameComponent = (React.createElement(LoadableContent, { loading: spreadableProps.loading }, nameRenderer == null ? defaultName : nameRenderer(name, spreadableProps.index)));\n        return (React.createElement(HeaderCell, __assign({ isReorderable: this.props.enableRowReordering, isSelected: this.props.isRowSelected }, spreadableProps),\n            React.createElement(\"div\", { className: Classes.TABLE_ROW_NAME }, nameComponent),\n            this.props.children,\n            spreadableProps.loading ? undefined : spreadableProps.resizeHandle));\n    };\n    RowHeaderCell = __decorate([\n        polyfill\n    ], RowHeaderCell);\n    return RowHeaderCell;\n}(AbstractPureComponent2));\nexport { RowHeaderCell };\n//# sourceMappingURL=rowHeaderCell.js.map"]},"metadata":{},"sourceType":"module"}