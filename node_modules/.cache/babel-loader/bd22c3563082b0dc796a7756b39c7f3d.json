{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { MenuItem } from \"@blueprintjs/core\";\nimport { Clipboard } from \"../../common/clipboard\";\nimport { Regions } from \"../../regions\";\n\nvar CopyCellsMenuItem = function (_super) {\n  __extends(CopyCellsMenuItem, _super);\n\n  function CopyCellsMenuItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClick = function () {\n      var _a = _this.props,\n          context = _a.context,\n          getCellData = _a.getCellData,\n          onCopy = _a.onCopy;\n      var cells = context.getUniqueCells();\n      var sparse = Regions.sparseMapCells(cells, getCellData);\n      var success = Clipboard.copyCells(sparse);\n      onCopy === null || onCopy === void 0 ? void 0 : onCopy(success);\n    };\n\n    return _this;\n  }\n\n  CopyCellsMenuItem.prototype.render = function () {\n    var _a = this.props,\n        context = _a.context,\n        getCellData = _a.getCellData,\n        onCopy = _a.onCopy,\n        menuItemProps = __rest(_a, [\"context\", \"getCellData\", \"onCopy\"]);\n\n    return React.createElement(MenuItem, __assign({}, menuItemProps, {\n      onClick: this.handleClick\n    }));\n  };\n\n  return CopyCellsMenuItem;\n}(React.PureComponent);\n\nexport { CopyCellsMenuItem };","map":{"version":3,"sources":["../../../../src/interactions/menus/copyCellsMenuItem.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAwB,QAAxB,QAAwC,mBAAxC;AAEA,SAAS,SAAT,QAA0B,wBAA1B;AACA,SAAS,OAAT,QAAwB,eAAxB;;AA4BA,IAAA,iBAAA,GAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAAvC,WAAA,iBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAMY,IAAA,KAAA,CAAA,WAAA,GAAc,YAAA;AACZ,UAAA,EAAA,GAAmC,KAAI,CAAC,KAAxC;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,WAAW,GAAA,EAAA,CAAA,WAAtB;AAAA,UAAwB,MAAM,GAAA,EAAA,CAAA,MAA9B;AACN,UAAM,KAAK,GAAG,OAAO,CAAC,cAAR,EAAd;AACA,UAAM,MAAM,GAAG,OAAO,CAAC,cAAR,CAAuB,KAAvB,EAA8B,WAA9B,CAAf;AACA,UAAM,OAAO,GAAG,SAAS,CAAC,SAAV,CAAoB,MAApB,CAAhB;AACA,MAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAG,OAAH,CAAN;AACH,KANO;;;AAOX;;AAZU,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,QAAM,EAAA,GAAqD,KAAK,KAAhE;AAAA,QAAQ,OAAO,GAAA,EAAA,CAAA,OAAf;AAAA,QAAiB,WAAW,GAAA,EAAA,CAAA,WAA5B;AAAA,QAA8B,MAAM,GAAA,EAAA,CAAA,MAApC;AAAA,QAAyC,aAAa,GAAA,MAAA,CAAA,EAAA,EAAhD,CAAA,SAAA,EAAA,aAAA,EAAA,QAAA,CAAgD,CAAtD;;AACA,WAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA,EAAA,EAAK,aAAL,EAAkB;AAAE,MAAA,OAAO,EAAE,KAAK;AAAhB,KAAlB,CAAT,CAAP;AACH,GAHM;;AAYX,SAAA,iBAAA;AAAC,CAbD,CAAuC,KAAK,CAAC,aAA7C,CAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { MenuItem } from \"@blueprintjs/core\";\nimport { Clipboard } from \"../../common/clipboard\";\nimport { Regions } from \"../../regions\";\nvar CopyCellsMenuItem = /** @class */ (function (_super) {\n    __extends(CopyCellsMenuItem, _super);\n    function CopyCellsMenuItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function () {\n            var _a = _this.props, context = _a.context, getCellData = _a.getCellData, onCopy = _a.onCopy;\n            var cells = context.getUniqueCells();\n            var sparse = Regions.sparseMapCells(cells, getCellData);\n            var success = Clipboard.copyCells(sparse);\n            onCopy === null || onCopy === void 0 ? void 0 : onCopy(success);\n        };\n        return _this;\n    }\n    CopyCellsMenuItem.prototype.render = function () {\n        var _a = this.props, context = _a.context, getCellData = _a.getCellData, onCopy = _a.onCopy, menuItemProps = __rest(_a, [\"context\", \"getCellData\", \"onCopy\"]);\n        return React.createElement(MenuItem, __assign({}, menuItemProps, { onClick: this.handleClick }));\n    };\n    return CopyCellsMenuItem;\n}(React.PureComponent));\nexport { CopyCellsMenuItem };\n//# sourceMappingURL=copyCellsMenuItem.js.map"]},"metadata":{},"sourceType":"module"}