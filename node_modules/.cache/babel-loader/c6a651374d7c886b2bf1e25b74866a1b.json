{"ast":null,"code":"import { useMonth } from './useMonth';\nconst TOTAL_OF_DAYS_PER_SCREEN = 42; // 42 days per screen\n\nconst getPreviousMonthDays = ({\n  showingYear,\n  showingMonth\n}) => {\n  const {\n    countOfDays,\n    startLocalDay\n  } = useMonth(showingMonth - 1, showingYear);\n  return new Array(startLocalDay).fill(null).map((_, idx) => {\n    return {\n      day: countOfDays - startLocalDay + idx + 1,\n      position: 'previous'\n    };\n  });\n};\n\nconst getCurrentMonthDays = ({\n  showingYear,\n  showingMonth\n}) => {\n  const {\n    countOfDays\n  } = useMonth(showingMonth, showingYear);\n  return new Array(countOfDays).fill(null).map((_, idx) => {\n    return {\n      day: idx + 1,\n      position: 'current'\n    };\n  });\n};\n\nconst getNextMonthDays = ({\n  currentMonthCountOfDays,\n  previousMonthCountOfDays\n}) => {\n  const totalDays = TOTAL_OF_DAYS_PER_SCREEN - currentMonthCountOfDays - previousMonthCountOfDays;\n  return new Array(totalDays > 0 ? totalDays : 0).fill(null).map((_, idx) => {\n    return {\n      day: idx + 1,\n      position: 'next'\n    };\n  });\n};\n\nexport const useShowingDays = ({\n  showingYear,\n  showingMonth\n}) => {\n  const previousMonthDays = getPreviousMonthDays({\n    showingYear,\n    showingMonth\n  });\n  const currentMonthDays = getCurrentMonthDays({\n    showingYear,\n    showingMonth\n  });\n  const nextMonthDays = getNextMonthDays({\n    currentMonthCountOfDays: currentMonthDays.length,\n    previousMonthCountOfDays: previousMonthDays.length\n  });\n  return [...previousMonthDays, ...currentMonthDays, ...nextMonthDays];\n};","map":{"version":3,"sources":["E:/React Projects/deski-design/node_modules/small-google-calendar/dist/src/components/Calendar/hooks/useShowingDays.js"],"names":["useMonth","TOTAL_OF_DAYS_PER_SCREEN","getPreviousMonthDays","showingYear","showingMonth","countOfDays","startLocalDay","Array","fill","map","_","idx","day","position","getCurrentMonthDays","getNextMonthDays","currentMonthCountOfDays","previousMonthCountOfDays","totalDays","useShowingDays","previousMonthDays","currentMonthDays","nextMonthDays","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,MAAMC,wBAAwB,GAAG,EAAjC,C,CAAqC;;AACrC,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAoC;AAC7D,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAiCN,QAAQ,CAACI,YAAY,GAAG,CAAhB,EAAmBD,WAAnB,CAA/C;AACA,SAAO,IAAII,KAAJ,CAAUD,aAAV,EAAyBE,IAAzB,CAA8B,IAA9B,EAAoCC,GAApC,CAAwC,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvD,WAAO;AACHC,MAAAA,GAAG,EAAEP,WAAW,GAAGC,aAAd,GAA8BK,GAA9B,GAAoC,CADtC;AAEHE,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH,GALM,CAAP;AAMH,CARD;;AASA,MAAMC,mBAAmB,GAAG,CAAC;AAAEX,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAoC;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,QAAQ,CAACI,YAAD,EAAeD,WAAf,CAAhC;AACA,SAAO,IAAII,KAAJ,CAAUF,WAAV,EAAuBG,IAAvB,CAA4B,IAA5B,EAAkCC,GAAlC,CAAsC,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACrD,WAAO;AAAEC,MAAAA,GAAG,EAAED,GAAG,GAAG,CAAb;AAAgBE,MAAAA,QAAQ,EAAE;AAA1B,KAAP;AACH,GAFM,CAAP;AAGH,CALD;;AAMA,MAAME,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,uBAAF;AAA2BC,EAAAA;AAA3B,CAAD,KAA4D;AACjF,QAAMC,SAAS,GAAGjB,wBAAwB,GACtCe,uBADc,GAEdC,wBAFJ;AAGA,SAAO,IAAIV,KAAJ,CAAUW,SAAS,GAAG,CAAZ,GAAgBA,SAAhB,GAA4B,CAAtC,EAAyCV,IAAzC,CAA8C,IAA9C,EAAoDC,GAApD,CAAwD,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvE,WAAO;AAAEC,MAAAA,GAAG,EAAED,GAAG,GAAG,CAAb;AAAgBE,MAAAA,QAAQ,EAAE;AAA1B,KAAP;AACH,GAFM,CAAP;AAGH,CAPD;;AAQA,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAoC;AAC9D,QAAMgB,iBAAiB,GAAGlB,oBAAoB,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,CAA9C;AACA,QAAMiB,gBAAgB,GAAGP,mBAAmB,CAAC;AAAEX,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,CAA5C;AACA,QAAMkB,aAAa,GAAGP,gBAAgB,CAAC;AACnCC,IAAAA,uBAAuB,EAAEK,gBAAgB,CAACE,MADP;AAEnCN,IAAAA,wBAAwB,EAAEG,iBAAiB,CAACG;AAFT,GAAD,CAAtC;AAIA,SAAO,CAAC,GAAGH,iBAAJ,EAAuB,GAAGC,gBAA1B,EAA4C,GAAGC,aAA/C,CAAP;AACH,CARM","sourcesContent":["import { useMonth } from './useMonth';\r\nconst TOTAL_OF_DAYS_PER_SCREEN = 42; // 42 days per screen\r\nconst getPreviousMonthDays = ({ showingYear, showingMonth, }) => {\r\n    const { countOfDays, startLocalDay } = useMonth(showingMonth - 1, showingYear);\r\n    return new Array(startLocalDay).fill(null).map((_, idx) => {\r\n        return {\r\n            day: countOfDays - startLocalDay + idx + 1,\r\n            position: 'previous',\r\n        };\r\n    });\r\n};\r\nconst getCurrentMonthDays = ({ showingYear, showingMonth, }) => {\r\n    const { countOfDays } = useMonth(showingMonth, showingYear);\r\n    return new Array(countOfDays).fill(null).map((_, idx) => {\r\n        return { day: idx + 1, position: 'current' };\r\n    });\r\n};\r\nconst getNextMonthDays = ({ currentMonthCountOfDays, previousMonthCountOfDays, }) => {\r\n    const totalDays = TOTAL_OF_DAYS_PER_SCREEN -\r\n        currentMonthCountOfDays -\r\n        previousMonthCountOfDays;\r\n    return new Array(totalDays > 0 ? totalDays : 0).fill(null).map((_, idx) => {\r\n        return { day: idx + 1, position: 'next' };\r\n    });\r\n};\r\nexport const useShowingDays = ({ showingYear, showingMonth, }) => {\r\n    const previousMonthDays = getPreviousMonthDays({ showingYear, showingMonth });\r\n    const currentMonthDays = getCurrentMonthDays({ showingYear, showingMonth });\r\n    const nextMonthDays = getNextMonthDays({\r\n        currentMonthCountOfDays: currentMonthDays.length,\r\n        previousMonthCountOfDays: previousMonthDays.length,\r\n    });\r\n    return [...previousMonthDays, ...currentMonthDays, ...nextMonthDays];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}