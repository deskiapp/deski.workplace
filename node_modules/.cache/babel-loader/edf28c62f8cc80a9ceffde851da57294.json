{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { Regions } from \"../regions\"; // don't include \"regions\" or \"regionStyles\" in here, because they can't be shallowly compared\n\nvar UPDATE_PROPS_KEYS = [\"className\"];\n\nvar RegionLayer = function (_super) {\n  __extends(RegionLayer, _super);\n\n  function RegionLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderRegion = function (_region, index) {\n      var _a = _this.props,\n          className = _a.className,\n          regionStyles = _a.regionStyles;\n      return React.createElement(\"div\", {\n        className: classNames(Classes.TABLE_OVERLAY, Classes.TABLE_REGION, className),\n        key: index,\n        style: regionStyles[index]\n      });\n    };\n\n    return _this;\n  }\n\n  RegionLayer.prototype.shouldComponentUpdate = function (nextProps) {\n    // shallowly comparable props like \"className\" tend not to change in the default table\n    // implementation, so do that check last with hope that we return earlier and avoid it\n    // altogether.\n    return !CoreUtils.arraysEqual(this.props.regions, nextProps.regions, Regions.regionsEqual) || !CoreUtils.arraysEqual(this.props.regionStyles, nextProps.regionStyles, CoreUtils.shallowCompareKeys) || !CoreUtils.shallowCompareKeys(this.props, nextProps, {\n      include: UPDATE_PROPS_KEYS\n    });\n  };\n\n  RegionLayer.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: Classes.TABLE_OVERLAY_LAYER\n    }, this.renderRegionChildren());\n  };\n\n  RegionLayer.prototype.renderRegionChildren = function () {\n    var regions = this.props.regions;\n\n    if (regions == null) {\n      return undefined;\n    }\n\n    return regions.map(this.renderRegion);\n  };\n\n  return RegionLayer;\n}(React.Component);\n\nexport { RegionLayer };","map":{"version":3,"sources":["../../../src/layers/regions.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAgB,KAAK,IAAI,SAAzB,QAA0C,mBAA1C;AAEA,OAAO,KAAK,OAAZ,MAAyB,mBAAzB;AAEA,SAAiB,OAAjB,QAAgC,YAAhC,C,CAiBA;;AACA,IAAM,iBAAiB,GAAG,CAAC,WAAD,CAA1B;;AAEA,IAAA,WAAA,GAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAwBY,IAAA,KAAA,CAAA,YAAA,GAAe,UAAC,OAAD,EAAkB,KAAlB,EAA+B;AAC5C,UAAA,EAAA,GAA8B,KAAI,CAAC,KAAnC;AAAA,UAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,UAAa,YAAY,GAAA,EAAA,CAAA,YAAzB;AACN,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACI,QAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,aAAT,EAAwB,OAAO,CAAC,YAAhC,EAA8C,SAA9C,CADzB;AAEI,QAAA,GAAG,EAAE,KAFT;AAGI,QAAA,KAAK,EAAE,YAAY,CAAC,KAAD;AAHvB,OAAA,CADJ;AAOH,KATO;;;AAUX;;AAjCU,EAAA,WAAA,CAAA,SAAA,CAAA,qBAAA,GAAP,UAA6B,SAA7B,EAAwD;AACpD;AACA;AACA;AACA,WACI,CAAC,SAAS,CAAC,WAAV,CAAsB,KAAK,KAAL,CAAW,OAAjC,EAA0C,SAAS,CAAC,OAApD,EAA6D,OAAO,CAAC,YAArE,CAAD,IACA,CAAC,SAAS,CAAC,WAAV,CAAsB,KAAK,KAAL,CAAW,YAAjC,EAA+C,SAAS,CAAC,YAAzD,EAAuE,SAAS,CAAC,kBAAjF,CADD,IAEA,CAAC,SAAS,CAAC,kBAAV,CAA6B,KAAK,KAAlC,EAAyC,SAAzC,EAAoD;AAAE,MAAA,OAAO,EAAE;AAAX,KAApD,CAHL;AAKH,GATM;;AAWA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAA8C,KAAK,oBAAL,EAA9C,CAAP;AACH,GAFM;;AAIC,EAAA,WAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,YAAA;AACY,QAAA,OAAO,GAAK,KAAK,KAAL,CAAL,OAAP;;AACR,QAAI,OAAO,IAAI,IAAf,EAAqB;AACjB,aAAO,SAAP;AACH;;AACD,WAAO,OAAO,CAAC,GAAR,CAAY,KAAK,YAAjB,CAAP;AACH,GANO;;AAkBZ,SAAA,WAAA;AAAC,CAlCD,CAAiC,KAAK,CAAC,SAAvC,CAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { Regions } from \"../regions\";\n// don't include \"regions\" or \"regionStyles\" in here, because they can't be shallowly compared\nvar UPDATE_PROPS_KEYS = [\"className\"];\nvar RegionLayer = /** @class */ (function (_super) {\n    __extends(RegionLayer, _super);\n    function RegionLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderRegion = function (_region, index) {\n            var _a = _this.props, className = _a.className, regionStyles = _a.regionStyles;\n            return (React.createElement(\"div\", { className: classNames(Classes.TABLE_OVERLAY, Classes.TABLE_REGION, className), key: index, style: regionStyles[index] }));\n        };\n        return _this;\n    }\n    RegionLayer.prototype.shouldComponentUpdate = function (nextProps) {\n        // shallowly comparable props like \"className\" tend not to change in the default table\n        // implementation, so do that check last with hope that we return earlier and avoid it\n        // altogether.\n        return (!CoreUtils.arraysEqual(this.props.regions, nextProps.regions, Regions.regionsEqual) ||\n            !CoreUtils.arraysEqual(this.props.regionStyles, nextProps.regionStyles, CoreUtils.shallowCompareKeys) ||\n            !CoreUtils.shallowCompareKeys(this.props, nextProps, { include: UPDATE_PROPS_KEYS }));\n    };\n    RegionLayer.prototype.render = function () {\n        return React.createElement(\"div\", { className: Classes.TABLE_OVERLAY_LAYER }, this.renderRegionChildren());\n    };\n    RegionLayer.prototype.renderRegionChildren = function () {\n        var regions = this.props.regions;\n        if (regions == null) {\n            return undefined;\n        }\n        return regions.map(this.renderRegion);\n    };\n    return RegionLayer;\n}(React.Component));\nexport { RegionLayer };\n//# sourceMappingURL=regions.js.map"]},"metadata":{},"sourceType":"module"}